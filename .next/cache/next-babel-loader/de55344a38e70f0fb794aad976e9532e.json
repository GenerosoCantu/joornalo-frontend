{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\DEVELOPMENT\\\\joornalo-frontend\\\\test\\\\pages\\\\section\\\\[section]\\\\[date]\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../../../components/MyLayout'; // url ===> http://localhost:3000/section/world-middleeast/2020-01-11/iraq-iran-us-troops-4c50e545-539e-4893-b505-1edc2de3c977\n\nconst News = props => {\n  // const router = useRouter()\n  // const { id, date, section } = router.query\n  // const uuid = id.slice(-36);\n  // const title = id.slice(0, id.length - 36);\n  const shows = props.shows;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"uuid: \", uuid), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, shows.map(show => __jsx(\"li\", {\n    key: show.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/p/[id]\",\n    as: `/p/${show.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, show.name))))));\n};\n\nNews.getInitialProps = async function (context) {\n  const {\n    section,\n    date,\n    id\n  } = context.query;\n  const uuid = id.slice(-36);\n  const title = id.slice(0, id.length - 36);\n  console.log('section:', section);\n  console.log('date:', date);\n  console.log('uuid:', uuid);\n  console.log('title:', title);\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  if (title !== 'iraq-iran-us-troops-') {\n    console.log(`Bad URL`);\n    return redirect(context, '/section/world-middleeast/2020-01-11/iraq-iran-us-troops-4c50e545-539e-4893-b505-1edc2de3c977');\n  }\n\n  return {\n    uuid,\n    shows: data.map(entry => entry.show)\n  }; // return {};\n};\n\nexport default News;","map":{"version":3,"sources":["C:/Projects/DEVELOPMENT/joornalo-frontend/test/pages/section/[section]/[date]/[id].js"],"names":["useRouter","Link","fetch","Layout","News","props","shows","uuid","map","show","id","name","getInitialProps","context","section","date","query","slice","title","length","console","log","res","data","json","redirect","entry"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,iCAAnB,C,CAEA;;AAGA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB;AACA;AACA;AACA;AAEA,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWC,IAAX,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,GAAN,CAAUC,IAAI,IACb;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,EAAE,EAAG,MAAKD,IAAI,CAACC,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,IAAI,CAACE,IAAT,CADF,CADF,CADD,CADH,CANF,CADF;AAmBD,CA3BD;;AA6BAP,IAAI,CAACQ,eAAL,GAAuB,gBAAgBC,OAAhB,EAAyB;AAC9C,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBL,IAAAA;AAAjB,MAAwBG,OAAO,CAACG,KAAtC;AAEA,QAAMT,IAAI,GAAGG,EAAE,CAACO,KAAH,CAAS,CAAC,EAAV,CAAb;AACA,QAAMC,KAAK,GAAGR,EAAE,CAACO,KAAH,CAAS,CAAT,EAAYP,EAAE,CAACS,MAAH,GAAY,EAAxB,CAAd;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBP,OAAxB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,IAArB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBd,IAArB;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,KAAtB;AAEA,QAAMI,GAAG,GAAG,MAAMpB,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMqB,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAJ,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BE,IAAI,CAACJ,MAAO,EAArD;;AAEA,MAAID,KAAK,KAAK,sBAAd,EAAsC;AACpCE,IAAAA,OAAO,CAACC,GAAR,CAAa,SAAb;AACA,WAAOI,QAAQ,CAACZ,OAAD,EAAU,+FAAV,CAAf;AACD;;AAED,SAAO;AACLN,IAAAA,IADK;AAELD,IAAAA,KAAK,EAAEiB,IAAI,CAACf,GAAL,CAASkB,KAAK,IAAIA,KAAK,CAACjB,IAAxB;AAFF,GAAP,CArB8C,CAyB9C;AACD,CA1BD;;AA4BA,eAAeL,IAAf","sourcesContent":["import { useRouter } from 'next/router'\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport Layout from '../../../../components/MyLayout';\r\n\r\n// url ===> http://localhost:3000/section/world-middleeast/2020-01-11/iraq-iran-us-troops-4c50e545-539e-4893-b505-1edc2de3c977\r\n\r\n\r\nconst News = (props) => {\r\n  // const router = useRouter()\r\n  // const { id, date, section } = router.query\r\n  // const uuid = id.slice(-36);\r\n  // const title = id.slice(0, id.length - 36);\r\n\r\n  const shows = props.shows;\r\n\r\n  return (\r\n    <Layout>\r\n      <h1>uuid: {uuid}</h1>\r\n      {/* <h1>title: {title}</h1>\r\n      <h1>section: {section}</h1>\r\n      <h1>date: {date}</h1> */}\r\n\r\n      <ul>\r\n        {shows.map(show => (\r\n          <li key={show.id}>\r\n            <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\r\n              <a>{show.name}</a>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n    </Layout>\r\n  )\r\n}\r\n\r\nNews.getInitialProps = async function (context) {\r\n  const { section, date, id } = context.query;\r\n\r\n  const uuid = id.slice(-36);\r\n  const title = id.slice(0, id.length - 36);\r\n\r\n  console.log('section:', section);\r\n  console.log('date:', date);\r\n  console.log('uuid:', uuid);\r\n  console.log('title:', title);\r\n\r\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\r\n  const data = await res.json();\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n  if (title !== 'iraq-iran-us-troops-') {\r\n    console.log(`Bad URL`);\r\n    return redirect(context, '/section/world-middleeast/2020-01-11/iraq-iran-us-troops-4c50e545-539e-4893-b505-1edc2de3c977');\r\n  }\r\n\r\n  return {\r\n    uuid,\r\n    shows: data.map(entry => entry.show)\r\n  };\r\n  // return {};\r\n};\r\n\r\nexport default News"]},"metadata":{},"sourceType":"module"}