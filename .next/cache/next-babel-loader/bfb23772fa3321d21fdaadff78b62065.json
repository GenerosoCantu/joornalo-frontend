{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\DEVELOPMENT\\\\joornalo-frontend\\\\front.joornalo\\\\components\\\\news1.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Parser, { domToReact, htmlToDOM } from 'html-react-parser';\n\nvar news1 = function news1(_ref) {\n  var data = _ref.data;\n  // const modText = Parser(data.text, {\n  //   replace: (domNode) => {\n  //     if (domNode.name === 'embed') {\n  //       return <div className=\"embed\">{Parser(data.media[domNode.attribs.id - 1].embed)}</div>;\n  //     }\n  //     if (domNode.name === 'image') {\n  //       return <img src={Parser('https://data.joornalo.com/news/4/c/' + data.images[domNode.attribs.id - 1].url)} />\n  //     }\n  //   }\n  // });\n  var tmp = unescape(data.text);\n  var find = tmp.lastIndexOf('<embed id=', tmp.length);\n  console.log(find); // while(find) {\n  // }\n  // const modText = Parser(data.text, {\n  //   replace: (domNode) => {\n  //     if (domNode.name === 'image') {\n  //       return <img src={('https://data.joornalo.com/news/4/c/' + data.images[domNode.attribs.id - 1].url)} />\n  //     }\n  //   }\n  // });\n\n  console.log(unescape(data.text)); // const modText = Parser(data.text);\n\n  return __jsx(\"div\", {\n    className: \"news\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, data.title), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, modText));\n};\n\nexport default news1;","map":{"version":3,"sources":["C:/Projects/DEVELOPMENT/joornalo-frontend/front.joornalo/components/news1.js"],"names":["React","Parser","domToReact","htmlToDOM","news1","data","tmp","unescape","text","find","lastIndexOf","length","console","log","title","modText"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,UAAjB,EAA6BC,SAA7B,QAA8C,mBAA9C;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMC,GAAG,GAAGC,QAAQ,CAACF,IAAI,CAACG,IAAN,CAApB;AAEA,MAAMC,IAAI,GAAGH,GAAG,CAACI,WAAJ,CAAgB,YAAhB,EAA8BJ,GAAG,CAACK,MAAlC,CAAb;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAjB0B,CAkB1B;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACF,IAAI,CAACG,IAAN,CAApB,EA9B0B,CAgC1B;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,IAAI,CAACS,KAAV,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,OAAN,CAHF,CADF;AAOD,CAzCD;;AA2CA,eAAeX,KAAf","sourcesContent":["import React from \"react\";\r\nimport Parser, { domToReact, htmlToDOM } from 'html-react-parser';\r\n\r\nconst news1 = ({ data }) => {\r\n\r\n  // const modText = Parser(data.text, {\r\n  //   replace: (domNode) => {\r\n  //     if (domNode.name === 'embed') {\r\n  //       return <div className=\"embed\">{Parser(data.media[domNode.attribs.id - 1].embed)}</div>;\r\n  //     }\r\n  //     if (domNode.name === 'image') {\r\n  //       return <img src={Parser('https://data.joornalo.com/news/4/c/' + data.images[domNode.attribs.id - 1].url)} />\r\n  //     }\r\n  //   }\r\n  // });\r\n\r\n  const tmp = unescape(data.text);\r\n\r\n  const find = tmp.lastIndexOf('<embed id=', tmp.length);\r\n\r\n  console.log(find);\r\n  // while(find) {\r\n\r\n  // }\r\n\r\n\r\n  // const modText = Parser(data.text, {\r\n  //   replace: (domNode) => {\r\n  //     if (domNode.name === 'image') {\r\n  //       return <img src={('https://data.joornalo.com/news/4/c/' + data.images[domNode.attribs.id - 1].url)} />\r\n  //     }\r\n  //   }\r\n  // });\r\n  console.log(unescape(data.text));\r\n\r\n  // const modText = Parser(data.text);\r\n\r\n  return (\r\n    <div className=\"news\">\r\n      <hr />\r\n      <h1>{data.title}</h1>\r\n      <div>{modText}</div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default news1;\r\n"]},"metadata":{},"sourceType":"module"}