{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Projects\\\\DEVELOPMENT\\\\joornalo-frontend\\\\test\\\\pages\\\\section\\\\[section]\\\\[date]\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../../../components/MyLayout'; // url ===> http://localhost:3000/section/world-middleeast/2020-01-11/iraq-iran-us-troops-4c50e545-539e-4893-b505-1edc2de3c977\n\nvar News = function News(props) {\n  var router = useRouter();\n  var _router$query = router.query,\n      id = _router$query.id,\n      date = _router$query.date,\n      section = _router$query.section;\n  var uuid = id.slice(-36);\n  var title = id.slice(0, id.length - 36);\n  var shows = props.shows;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"uuid: \", uuid), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"title: \", title), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"section: \", section), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"date: \", date), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, shows.map(function (show) {\n    return __jsx(\"li\", {\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, show.name)));\n  })));\n};\n\nNews.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.tvmaze.com/search/shows?q=batman'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default News;","map":{"version":3,"sources":["C:/Projects/DEVELOPMENT/joornalo-frontend/test/pages/section/[section]/[date]/[id].js"],"names":["useRouter","Link","fetch","Layout","News","props","router","query","id","date","section","uuid","slice","title","length","shows","map","show","name","getInitialProps","res","json","data","console","log","entry"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,iCAAnB,C,CAEA;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AACtB,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AADsB,sBAEQM,MAAM,CAACC,KAFf;AAAA,MAEdC,EAFc,iBAEdA,EAFc;AAAA,MAEVC,IAFU,iBAEVA,IAFU;AAAA,MAEJC,OAFI,iBAEJA,OAFI;AAGtB,MAAMC,IAAI,GAAGH,EAAE,CAACI,KAAH,CAAS,CAAC,EAAV,CAAb;AACA,MAAMC,KAAK,GAAGL,EAAE,CAACI,KAAH,CAAS,CAAT,EAAYJ,EAAE,CAACM,MAAH,GAAY,EAAxB,CAAd;AAEA,MAAMC,KAAK,GAAGV,KAAK,CAACU,KAApB;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWJ,IAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYE,KAAZ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcH,OAAd,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWD,IAAX,CAJF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,WACb;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACT,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQS,IAAI,CAACT,EAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIS,IAAI,CAACC,IAAT,CADF,CADF,CADa;AAAA,GAAd,CADH,CANF,CADF;AAmBD,CA3BD;;AA6BAd,IAAI,CAACe,eAAL,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACHjB,KAAK,CAAC,8CAAD,CADF;;AAAA;AACfkB,UAAAA,GADe;AAAA;AAAA,2CAEFA,GAAG,CAACC,IAAJ,EAFE;;AAAA;AAEfC,UAAAA,IAFe;AAIrBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACR,MAA9C;AAJqB,2CAMd;AACLC,YAAAA,KAAK,EAAEO,IAAI,CAACN,GAAL,CAAS,UAAAS,KAAK;AAAA,qBAAIA,KAAK,CAACR,IAAV;AAAA,aAAd;AADF,WANc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAYA,eAAeb,IAAf","sourcesContent":["import { useRouter } from 'next/router'\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport Layout from '../../../../components/MyLayout';\r\n\r\n// url ===> http://localhost:3000/section/world-middleeast/2020-01-11/iraq-iran-us-troops-4c50e545-539e-4893-b505-1edc2de3c977\r\n\r\n\r\nconst News = (props) => {\r\n  const router = useRouter()\r\n  const { id, date, section } = router.query\r\n  const uuid = id.slice(-36);\r\n  const title = id.slice(0, id.length - 36);\r\n\r\n  const shows = props.shows;\r\n\r\n  return (\r\n    <Layout>\r\n      <h1>uuid: {uuid}</h1>\r\n      <h1>title: {title}</h1>\r\n      <h1>section: {section}</h1>\r\n      <h1>date: {date}</h1>\r\n\r\n      <ul>\r\n        {shows.map(show => (\r\n          <li key={show.id}>\r\n            <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\r\n              <a>{show.name}</a>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n    </Layout>\r\n  )\r\n}\r\n\r\nNews.getInitialProps = async function () {\r\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\r\n  const data = await res.json();\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n  return {\r\n    shows: data.map(entry => entry.show)\r\n  };\r\n  // return {};\r\n};\r\n\r\nexport default News"]},"metadata":{},"sourceType":"module"}