{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\DEVELOPMENT\\\\joornalo-frontend\\\\front.joornalo\\\\components\\\\news1.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Parser, { domToReact, htmlToDOM } from 'html-react-parser';\n\nvar news1 = function news1(_ref) {\n  var data = _ref.data;\n  // const modText = Parser(data.text, {\n  //   replace: (domNode) => {\n  //     if (domNode.name === 'embed') {\n  //       return <div className=\"embed\">{Parser(data.media[domNode.attribs.id - 1].embed)}</div>;\n  //     }\n  //     if (domNode.name === 'image') {\n  //       return <img src={Parser('https://data.joornalo.com/news/4/c/' + data.images[domNode.attribs.id - 1].url)} />\n  //     }\n  //   }\n  // });\n  var modText = Parser(data.text, {\n    replace: function replace(domNode) {\n      if (domNode.name === 'image') {\n        var dom = new DOMParser();\n        return __jsx(\"img\", {\n          src: 'https://data.joornalo.com/news/4/c/' + data.images[domNode.attribs.id - 1].url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        });\n      }\n    }\n  }); // const modText = Parser(data.text);\n\n  return __jsx(\"div\", {\n    className: \"news\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, data.title), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, modText));\n};\n\nexport default news1;","map":{"version":3,"sources":["C:/Projects/DEVELOPMENT/joornalo-frontend/front.joornalo/components/news1.js"],"names":["React","Parser","domToReact","htmlToDOM","news1","data","modText","text","replace","domNode","name","dom","DOMParser","images","attribs","id","url","title"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,UAAjB,EAA6BC,SAA7B,QAA8C,mBAA9C;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,MAAMC,OAAO,GAAGL,MAAM,CAACI,IAAI,CAACE,IAAN,EAAY;AAChCC,IAAAA,OAAO,EAAE,iBAACC,OAAD,EAAa;AACpB,UAAIA,OAAO,CAACC,IAAR,KAAiB,OAArB,EAA8B;AAC5B,YAAMC,GAAG,GAAG,IAAIC,SAAJ,EAAZ;AACA,eAAO;AAAK,UAAA,GAAG,EAAG,wCAAwCP,IAAI,CAACQ,MAAL,CAAYJ,OAAO,CAACK,OAAR,CAAgBC,EAAhB,GAAqB,CAAjC,EAAoCC,GAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF;AAN+B,GAAZ,CAAtB,CAd0B,CAuB1B;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKX,IAAI,CAACY,KAAV,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMX,OAAN,CAHF,CADF;AAOD,CAhCD;;AAkCA,eAAeF,KAAf","sourcesContent":["import React from \"react\";\r\nimport Parser, { domToReact, htmlToDOM } from 'html-react-parser';\r\n\r\nconst news1 = ({ data }) => {\r\n\r\n  // const modText = Parser(data.text, {\r\n  //   replace: (domNode) => {\r\n  //     if (domNode.name === 'embed') {\r\n  //       return <div className=\"embed\">{Parser(data.media[domNode.attribs.id - 1].embed)}</div>;\r\n  //     }\r\n  //     if (domNode.name === 'image') {\r\n  //       return <img src={Parser('https://data.joornalo.com/news/4/c/' + data.images[domNode.attribs.id - 1].url)} />\r\n  //     }\r\n  //   }\r\n  // });\r\n\r\n\r\n  const modText = Parser(data.text, {\r\n    replace: (domNode) => {\r\n      if (domNode.name === 'image') {\r\n        const dom = new DOMParser();\r\n        return <img src={('https://data.joornalo.com/news/4/c/' + data.images[domNode.attribs.id - 1].url)} />\r\n      }\r\n    }\r\n  });\r\n\r\n  // const modText = Parser(data.text);\r\n\r\n  return (\r\n    <div className=\"news\">\r\n      <hr />\r\n      <h1>{data.title}</h1>\r\n      <div>{modText}</div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default news1;\r\n"]},"metadata":{},"sourceType":"module"}