{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\DEVELOPMENT\\\\joornalo-frontend\\\\front.joornalo\\\\components\\\\news1.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Parser, { domToReact, htmlToDOM } from 'html-react-parser';\n\nconst news1 = ({\n  data\n}) => {\n  // const modText = Parser(data.text, {\n  //   replace: (domNode) => {\n  //     if (domNode.name === 'embed') {\n  //       return <div className=\"embed\">{Parser(data.media[domNode.attribs.id - 1].embed)}</div>;\n  //     }\n  //     if (domNode.name === 'image') {\n  //       return <img src={Parser('https://data.joornalo.com/news/4/c/' + data.images[domNode.attribs.id - 1].url)} />\n  //     }\n  //   }\n  // });\n  const tmp = unescape(data.text); //const find = tmp.lastIndexOf('<embed id=\"', tmp.length);\n\n  const find = tmp.split('<embed id=\"');\n\n  for (let i = find.length - 1; i--;) {\n    mediaNum = find[i + 1][0];\n    console.log('-------------------------------------1: ', mediaNum);\n    console.log(find[i + 1]);\n    console.log('-------------------------------------2');\n    find[i + 1] = find[i + 1].substring(5);\n    console.log(find[i + 1]);\n  } //<div className=\"embed\">{Parser(data.media[domNode.attribs.id - 1].embed)}</div>\n  // const modText = Parser(data.text, {\n  //   replace: (domNode) => {\n  //     if (domNode.name === 'image') {\n  //       return <img src={('https://data.joornalo.com/news/4/c/' + data.images[domNode.attribs.id - 1].url)} />\n  //     }\n  //   }\n  // });\n\n\n  console.log(unescape(data.text));\n  const modText = Parser(data.text);\n  return __jsx(\"div\", {\n    className: \"news\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, data.title), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, modText));\n};\n\nexport default news1;","map":{"version":3,"sources":["C:/Projects/DEVELOPMENT/joornalo-frontend/front.joornalo/components/news1.js"],"names":["React","Parser","domToReact","htmlToDOM","news1","data","tmp","unescape","text","find","split","i","length","mediaNum","console","log","substring","modText","title"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,UAAjB,EAA6BC,SAA7B,QAA8C,mBAA9C;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,GAAG,GAAGC,QAAQ,CAACF,IAAI,CAACG,IAAN,CAApB,CAb0B,CAe1B;;AACA,QAAMC,IAAI,GAAGH,GAAG,CAACI,KAAJ,CAAU,aAAV,CAAb;;AAGA,OAAK,IAAIC,CAAC,GAAGF,IAAI,CAACG,MAAL,GAAc,CAA3B,EAA8BD,CAAC,EAA/B,GAAoC;AAClCE,IAAAA,QAAQ,GAAGJ,IAAI,CAACE,CAAC,GAAG,CAAL,CAAJ,CAAY,CAAZ,CAAX;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ,EAAwDF,QAAxD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACE,CAAC,GAAG,CAAL,CAAhB;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACAN,IAAAA,IAAI,CAACE,CAAC,GAAG,CAAL,CAAJ,GAAcF,IAAI,CAACE,CAAC,GAAG,CAAL,CAAJ,CAAYK,SAAZ,CAAsB,CAAtB,CAAd;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACE,CAAC,GAAG,CAAL,CAAhB;AACD,GA3ByB,CA6B1B;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACF,IAAI,CAACG,IAAN,CAApB;AAEA,QAAMS,OAAO,GAAGhB,MAAM,CAACI,IAAI,CAACG,IAAN,CAAtB;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,IAAI,CAACa,KAAV,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,OAAN,CAHF,CADF;AAOD,CAlDD;;AAoDA,eAAeb,KAAf","sourcesContent":["import React from \"react\";\r\nimport Parser, { domToReact, htmlToDOM } from 'html-react-parser';\r\n\r\nconst news1 = ({ data }) => {\r\n\r\n  // const modText = Parser(data.text, {\r\n  //   replace: (domNode) => {\r\n  //     if (domNode.name === 'embed') {\r\n  //       return <div className=\"embed\">{Parser(data.media[domNode.attribs.id - 1].embed)}</div>;\r\n  //     }\r\n  //     if (domNode.name === 'image') {\r\n  //       return <img src={Parser('https://data.joornalo.com/news/4/c/' + data.images[domNode.attribs.id - 1].url)} />\r\n  //     }\r\n  //   }\r\n  // });\r\n\r\n  const tmp = unescape(data.text);\r\n\r\n  //const find = tmp.lastIndexOf('<embed id=\"', tmp.length);\r\n  const find = tmp.split('<embed id=\"');\r\n\r\n\r\n  for (let i = find.length - 1; i--;) {\r\n    mediaNum = find[i + 1][0];\r\n    console.log('-------------------------------------1: ', mediaNum);\r\n    console.log(find[i + 1]);\r\n\r\n    console.log('-------------------------------------2');\r\n    find[i + 1] = find[i + 1].substring(5);\r\n    console.log(find[i + 1]);\r\n  }\r\n\r\n  //<div className=\"embed\">{Parser(data.media[domNode.attribs.id - 1].embed)}</div>\r\n\r\n\r\n  // const modText = Parser(data.text, {\r\n  //   replace: (domNode) => {\r\n  //     if (domNode.name === 'image') {\r\n  //       return <img src={('https://data.joornalo.com/news/4/c/' + data.images[domNode.attribs.id - 1].url)} />\r\n  //     }\r\n  //   }\r\n  // });\r\n  console.log(unescape(data.text));\r\n\r\n  const modText = Parser(data.text);\r\n\r\n  return (\r\n    <div className=\"news\">\r\n      <hr />\r\n      <h1>{data.title}</h1>\r\n      <div>{modText}</div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default news1;\r\n"]},"metadata":{},"sourceType":"module"}