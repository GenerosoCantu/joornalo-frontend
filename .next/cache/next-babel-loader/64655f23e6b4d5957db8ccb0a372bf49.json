{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\DEVELOPMENT\\\\joornalo-frontend\\\\test\\\\pages\\\\section\\\\[section]\\\\[date]\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../../../components/MyLayout';\n\nconst News = props => {\n  const router = useRouter();\n  const {\n    id,\n    date,\n    section\n  } = router.query;\n  console.log(id);\n  const uuid = id.slice(-36);\n  const title = id.slice(0, id.length - 36);\n  const shows = props.shows;\n  console.log(shows);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"uuid: \", uuid), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"title: \", title), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"section: \", section), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"date: \", date), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, shows.map(show => __jsx(\"li\", {\n    key: show.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/p/[id]\",\n    as: `/p/${show.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, show.name))))));\n};\n\nNews.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n  return {\n    shows: data.map(entry => entry.show)\n  }; // return {};\n};\n\nexport default News;","map":{"version":3,"sources":["C:/Projects/DEVELOPMENT/joornalo-frontend/test/pages/section/[section]/[date]/[id].js"],"names":["useRouter","Link","fetch","Layout","News","props","router","id","date","section","query","console","log","uuid","slice","title","length","shows","map","show","name","getInitialProps","res","data","json","entry"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAM;AAAEO,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA;AAAZ,MAAwBH,MAAM,CAACI,KAArC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,EAAZ;AACA,QAAMM,IAAI,GAAGN,EAAE,CAACO,KAAH,CAAS,CAAC,EAAV,CAAb;AACA,QAAMC,KAAK,GAAGR,EAAE,CAACO,KAAH,CAAS,CAAT,EAAYP,EAAE,CAACS,MAAH,GAAY,EAAxB,CAAd;AAEA,QAAMC,KAAK,GAAGZ,KAAK,CAACY,KAApB;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWJ,IAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYE,KAAZ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcN,OAAd,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWD,IAAX,CAJF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,KAAK,CAACC,GAAN,CAAUC,IAAI,IACb;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACZ,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,EAAE,EAAG,MAAKY,IAAI,CAACZ,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIY,IAAI,CAACC,IAAT,CADF,CADF,CADD,CADH,CANF,CADF;AAmBD,CA7BD;;AA+BAhB,IAAI,CAACiB,eAAL,GAAuB,kBAAkB;AACvC,QAAMC,GAAG,GAAG,MAAMpB,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMqB,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAb,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BW,IAAI,CAACP,MAAO,EAArD;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAEM,IAAI,CAACL,GAAL,CAASO,KAAK,IAAIA,KAAK,CAACN,IAAxB;AADF,GAAP,CANuC,CASvC;AACD,CAVD;;AAYA,eAAef,IAAf","sourcesContent":["import { useRouter } from 'next/router'\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport Layout from '../../../../components/MyLayout';\r\n\r\nconst News = (props) => {\r\n  const router = useRouter()\r\n  const { id, date, section } = router.query\r\n  console.log(id);\r\n  const uuid = id.slice(-36);\r\n  const title = id.slice(0, id.length - 36);\r\n\r\n  const shows = props.shows;\r\n  console.log(shows);\r\n\r\n  return (\r\n    <Layout>\r\n      <h1>uuid: {uuid}</h1>\r\n      <h1>title: {title}</h1>\r\n      <h1>section: {section}</h1>\r\n      <h1>date: {date}</h1>\r\n\r\n      <ul>\r\n        {shows.map(show => (\r\n          <li key={show.id}>\r\n            <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\r\n              <a>{show.name}</a>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n    </Layout>\r\n  )\r\n}\r\n\r\nNews.getInitialProps = async function () {\r\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\r\n  const data = await res.json();\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n  return {\r\n    shows: data.map(entry => entry.show)\r\n  };\r\n  // return {};\r\n};\r\n\r\nexport default News"]},"metadata":{},"sourceType":"module"}