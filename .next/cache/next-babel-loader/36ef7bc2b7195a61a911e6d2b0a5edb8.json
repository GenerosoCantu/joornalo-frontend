{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_AGENT, REMOVE_ALERT } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_AGENT:\n      console.log('GET_AGENT.....', action.payload);\n      console.log('state.....', state);\n      return _objectSpread({}, state, {\n        agent: action.payload.agent()\n      });\n\n    case REMOVE_ALERT:\n      return null;\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Projects/DEVELOPMENT/joornalo-frontend/front.joornalo/context/config/configReducer.js"],"names":["GET_AGENT","REMOVE_ALERT","state","action","type","console","log","payload","agent"],"mappings":";;;;;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,YAApB,QAAwC,UAAxC;AAEA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,SAAL;AACEK,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,MAAM,CAACI,OAArC;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,KAA1B;AACA,+BACKA,KADL;AAEEM,QAAAA,KAAK,EAAEL,MAAM,CAACI,OAAP,CAAeC,KAAf;AAFT;;AAIF,SAAKP,YAAL;AACE,aAAO,IAAP;;AACF;AACE,aAAOC,KAAP;AAXJ;AAaD,CAdD","sourcesContent":["import { GET_AGENT, REMOVE_ALERT } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_AGENT:\r\n      console.log('GET_AGENT.....', action.payload);\r\n      console.log('state.....', state);\r\n      return {\r\n        ...state,\r\n        agent: action.payload.agent()\r\n      };\r\n    case REMOVE_ALERT:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}