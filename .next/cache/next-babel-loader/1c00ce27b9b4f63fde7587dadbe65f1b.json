{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Projects\\\\DEVELOPMENT\\\\joornalo-frontend\\\\test\\\\pages\\\\section\\\\[section]\\\\[date]\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../../../../components/MyLayout'; // url ===> http://localhost:3000/section/world-middleeast/2020-01-11/iraq-iran-us-troops-4c50e545-539e-4893-b505-1edc2de3c977\n\nvar News = function News(props) {\n  // const router = useRouter()\n  // const { id, date, section } = router.query\n  // const uuid = id.slice(-36);\n  // const title = id.slice(0, id.length - 36);\n  var shows = props.shows;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"uuid: \", uuid), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, shows.map(function (show) {\n    return __jsx(\"li\", {\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, show.name)));\n  })));\n};\n\nNews.getInitialProps = function _callee(context) {\n  var _context$query, section, date, id, uuid, title, res, data;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context$query = context.query, section = _context$query.section, date = _context$query.date, id = _context$query.id;\n          uuid = id.slice(-36);\n          title = id.slice(0, id.length - 36);\n          console.log('section:', section);\n          console.log('date:', date);\n          console.log('uuid:', uuid);\n          console.log('title:', title);\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(fetch('https://api.tvmaze.com/search/shows?q=batman'));\n\n        case 9:\n          res = _context.sent;\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 12:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n\n          if (!(title !== 'iraq-iran-us-troops-')) {\n            _context.next = 17;\n            break;\n          }\n\n          console.log(\"Bad URL\");\n          return _context.abrupt(\"return\", redirect(context, '/section/world-middleeast/2020-01-11/iraq-iran-us-troops-4c50e545-539e-4893-b505-1edc2de3c977'));\n\n        case 17:\n          return _context.abrupt(\"return\", {\n            uuid: uuid,\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default News;","map":{"version":3,"sources":["C:/Projects/DEVELOPMENT/joornalo-frontend/test/pages/section/[section]/[date]/[id].js"],"names":["useRouter","Link","fetch","Layout","News","props","shows","uuid","map","show","id","name","getInitialProps","context","query","section","date","slice","title","length","console","log","res","json","data","redirect","entry"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,iCAAnB,C,CAEA;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AACtB;AACA;AACA;AACA;AAEA,MAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWC,IAAX,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,GAAN,CAAU,UAAAC,IAAI;AAAA,WACb;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,IAAT,CADF,CADF,CADa;AAAA,GAAd,CADH,CANF,CADF;AAmBD,CA3BD;;AA6BAP,IAAI,CAACQ,eAAL,GAAuB,iBAAgBC,OAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,2BACSA,OAAO,CAACC,KADjB,EACbC,OADa,kBACbA,OADa,EACJC,IADI,kBACJA,IADI,EACEN,EADF,kBACEA,EADF;AAGfH,UAAAA,IAHe,GAGRG,EAAE,CAACO,KAAH,CAAS,CAAC,EAAV,CAHQ;AAIfC,UAAAA,KAJe,GAIPR,EAAE,CAACO,KAAH,CAAS,CAAT,EAAYP,EAAE,CAACS,MAAH,GAAY,EAAxB,CAJO;AAMrBC,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBN,OAAxB;AACAK,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,IAArB;AACAI,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBd,IAArB;AACAa,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,KAAtB;AATqB;AAAA,2CAWHhB,KAAK,CAAC,8CAAD,CAXF;;AAAA;AAWfoB,UAAAA,GAXe;AAAA;AAAA,2CAYFA,GAAG,CAACC,IAAJ,EAZE;;AAAA;AAYfC,UAAAA,IAZe;AAcrBJ,UAAAA,OAAO,CAACC,GAAR,qCAAyCG,IAAI,CAACL,MAA9C;;AAdqB,gBAgBjBD,KAAK,KAAK,sBAhBO;AAAA;AAAA;AAAA;;AAiBnBE,UAAAA,OAAO,CAACC,GAAR;AAjBmB,2CAkBZI,QAAQ,CAACZ,OAAD,EAAU,+FAAV,CAlBI;;AAAA;AAAA,2CAqBd;AACLN,YAAAA,IAAI,EAAJA,IADK;AAELD,YAAAA,KAAK,EAAEkB,IAAI,CAAChB,GAAL,CAAS,UAAAkB,KAAK;AAAA,qBAAIA,KAAK,CAACjB,IAAV;AAAA,aAAd;AAFF,WArBc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AA4BA,eAAeL,IAAf","sourcesContent":["import { useRouter } from 'next/router'\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport Layout from '../../../../components/MyLayout';\r\n\r\n// url ===> http://localhost:3000/section/world-middleeast/2020-01-11/iraq-iran-us-troops-4c50e545-539e-4893-b505-1edc2de3c977\r\n\r\n\r\nconst News = (props) => {\r\n  // const router = useRouter()\r\n  // const { id, date, section } = router.query\r\n  // const uuid = id.slice(-36);\r\n  // const title = id.slice(0, id.length - 36);\r\n\r\n  const shows = props.shows;\r\n\r\n  return (\r\n    <Layout>\r\n      <h1>uuid: {uuid}</h1>\r\n      {/* <h1>title: {title}</h1>\r\n      <h1>section: {section}</h1>\r\n      <h1>date: {date}</h1> */}\r\n\r\n      <ul>\r\n        {shows.map(show => (\r\n          <li key={show.id}>\r\n            <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\r\n              <a>{show.name}</a>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n    </Layout>\r\n  )\r\n}\r\n\r\nNews.getInitialProps = async function (context) {\r\n  const { section, date, id } = context.query;\r\n\r\n  const uuid = id.slice(-36);\r\n  const title = id.slice(0, id.length - 36);\r\n\r\n  console.log('section:', section);\r\n  console.log('date:', date);\r\n  console.log('uuid:', uuid);\r\n  console.log('title:', title);\r\n\r\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\r\n  const data = await res.json();\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n  if (title !== 'iraq-iran-us-troops-') {\r\n    console.log(`Bad URL`);\r\n    return redirect(context, '/section/world-middleeast/2020-01-11/iraq-iran-us-troops-4c50e545-539e-4893-b505-1edc2de3c977');\r\n  }\r\n\r\n  return {\r\n    uuid,\r\n    shows: data.map(entry => entry.show)\r\n  };\r\n  // return {};\r\n};\r\n\r\nexport default News"]},"metadata":{},"sourceType":"module"}