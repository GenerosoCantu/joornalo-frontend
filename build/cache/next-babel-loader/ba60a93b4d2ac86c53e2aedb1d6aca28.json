{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useLayoutEffect } from 'react';\nimport Parser, { domToReact, htmlToDOM } from 'html-react-parser';\nimport Adv from './adv';\n\nvar news1 = function news1(_ref) {\n  var data = _ref.data;\n  // componentDidMount(() => {\n  //   console.log('componentDidMount')\n  // });\n  useEffect(function () {\n    window.addEventListener('resize', updateImageWidths);\n    updateImageWidths();\n  }, []);\n  var tmp = unescape(data.text);\n  var find;\n  find = tmp.split('<embed id=\"');\n\n  for (var i = find.length - 1; i--;) {\n    var mediaNum = _parseInt(find[i + 1].charAt(0));\n\n    if (data.media[mediaNum - 1]) {\n      find[i + 1] = '<div class=\"embed\">' + data.media[mediaNum - 1].embed + '</div>' + find[i + 1].substring(5);\n    } else {\n      find[i + 1] = find[i + 1].substring(5);\n    }\n  }\n\n  tmp = find.join('');\n  find = tmp.split('<image id=\"');\n\n  for (var _i = find.length - 1; _i--;) {\n    var imageNum = _parseInt(find[_i + 1].charAt(0));\n\n    if (data.images[imageNum - 1]) {\n      find[_i + 1] = '<img src=\"https://data.joornalo.com/news/4/c/' + data.images[imageNum - 1].url + '\" />' + find[_i + 1].substring(5);\n    } else {\n      find[_i + 1] = find[_i + 1].substring(5);\n    }\n  }\n\n  var modText = Parser(find.join(''));\n  var mainImgUrl = 'https://data.joornalo.com/news/4/c/' + data.images[0].url;\n\n  var updateImageWidths = function updateImageWidths() {\n    //console.log('updateImageWidths********')\n    var contentWidth = document.querySelector(\".newsContent div\").offsetWidth; //console.log(contentWidth);\n\n    var embed = document.querySelectorAll('.newsContent .embed iframe');\n\n    for (var x = 0; x < embed.length; x++) {\n      embed[x].width = contentWidth; //embed[x].height = contentWidth * .5625;\n    }\n\n    embed = document.querySelectorAll('.newsContent .embed .twitter-tweet'); //console.log(embed)\n\n    for (var _x = 0; _x < embed.length; _x++) {\n      embed[_x].style[\"width\"] = \"100%\";\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"news\"\n  }, __jsx(\"h1\", null, data.title), __jsx(\"img\", {\n    src: mainImgUrl\n  }), __jsx(\"div\", {\n    className: \"row row-m-column\"\n  }, __jsx(\"div\", {\n    className: \"col-220 col-m-full\"\n  }, __jsx(\"div\", {\n    className: \"details\"\n  }, \"Details\"), __jsx(Adv, null)), __jsx(\"div\", {\n    className: \"newsContent col-full-220 col-m-auto\"\n  }, __jsx(\"div\", {\n    suppressHydrationWarning: true\n  }, modText))));\n};\n\nexport default news1;","map":null,"metadata":{},"sourceType":"module"}