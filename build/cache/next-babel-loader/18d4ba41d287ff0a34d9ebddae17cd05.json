{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport store from '../../pages/store';\nimport { GET_NEWS, SET_LOADING, ADD_TEMPLATE, NEWS_ERROR, INIT_AGENT, GET_CONFIG, GET_OTHERNEWS } from '../types';\nimport { initAgent, test } from '../../services/configService';\nimport axios from 'axios';\nimport Parser from 'html-react-parser';\n\nvar getTemplate = function getTemplate(req, template, agent) {\n  var tmpl, templateUrl, res;\n  return _regeneratorRuntime.async(function getTemplate$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          setLoading();\n          tmpl = agent + '-' + template;\n          templateUrl = \"https://data.joornalo.com/templates/news/\".concat(tmpl, \".json\");\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(axios.get(templateUrl));\n\n        case 6:\n          res = _context.sent;\n          return _context.abrupt(\"return\", res.data);\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('***********Template Error');\n          dispatch({\n            type: NEWS_ERROR,\n            payload: _context.t0.statusText\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 10]]);\n};\n\nexport var getOtherNews = function getOtherNews(section) {\n  return function _callee(dispatch, getState) {\n    var moreUrl, res;\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            setLoading();\n            moreUrl = \"https://data.joornalo.com/news/\".concat(section, \"-more-news.json\");\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(axios.get(moreUrl));\n\n          case 5:\n            res = _context2.sent;\n            dispatch({\n              type: GET_OTHERNEWS,\n              payload: {\n                topNews: res.data.topNews,\n                moreNews: res.data.moreNews\n              }\n            });\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            dispatch({\n              type: NEWS_ERROR,\n              payload: 'NotFound'\n            });\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 9]]);\n  };\n};\nexport var getNews = function getNews(section, date, uuid, url, req) {\n  return function _callee2(dispatch, getState) {\n    var path, res, agent, tmpl, template;\n    return _regeneratorRuntime.async(function _callee2$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            setLoading();\n            path = \"https://data.joornalo.com/news/\".concat(uuid.charAt(0), \"/\").concat(uuid.charAt(1), \"/\").concat(uuid, \".json\");\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(axios.get(path));\n\n          case 5:\n            res = _context3.sent;\n\n            if (url !== res.data['url']) {\n              dispatch({\n                type: NEWS_ERROR,\n                payload: \"Redirect: \".concat(res.data['url'])\n              });\n            }\n\n            agent = getState().news.agent;\n            tmpl = agent + '-' + res.data['template'];\n            template = getState().news.templates[tmpl];\n\n            if (template) {\n              _context3.next = 15;\n              break;\n            }\n\n            _context3.next = 13;\n            return _regeneratorRuntime.awrap(getTemplate(req, res.data['template'], getState().news.agent));\n\n          case 13:\n            template = _context3.sent;\n            dispatch({\n              type: ADD_TEMPLATE,\n              payload: {\n                template: _defineProperty({}, tmpl, template)\n              }\n            });\n\n          case 15:\n            // let tmp = unescape(res.data.text);\n            // let find = tmp.split('<embed id=\"');\n            // for (let i = find.length - 1; i--;) {\n            //   let mediaNum = parseInt(find[i + 1].charAt(0));\n            //   if (res.data.media[mediaNum - 1]) {\n            //     find[i + 1] = '<div class=\"embed\">' + res.data.media[mediaNum - 1].embed + '</div>' + find[i + 1].substring(5);\n            //   } else {\n            //     find[i + 1] = find[i + 1].substring(5);\n            //   }\n            // }\n            // tmp = find.join('');\n            // find = tmp.split('<image id=\"');\n            // for (let i = find.length - 1; i--;) {\n            //   let imageNum = parseInt(find[i + 1].charAt(0));\n            //   if (res.data.images[imageNum - 1]) {\n            //     find[i + 1] = '<img src=\"https://data.joornalo.com/news/4/c/' + res.data.images[imageNum - 1].url + '\" />' + find[i + 1].substring(5);\n            //   } else {\n            //     find[i + 1] = find[i + 1].substring(5);\n            //   }\n            // }\n            // res.data.modText = Parser(find.join(''));\n            // res.data.mainImgUrl = 'https://data.joornalo.com/news/4/c/' + res.data.images[0].url;\n            //console.log(data);\n            dispatch({\n              type: GET_NEWS,\n              payload: {\n                news: res.data,\n                templateName: 'template-' + res.data['template'],\n                template: template\n              }\n            });\n            _context3.next = 21;\n            break;\n\n          case 18:\n            _context3.prev = 18;\n            _context3.t0 = _context3[\"catch\"](0);\n            dispatch({\n              type: NEWS_ERROR,\n              payload: 'NotFound'\n            });\n\n          case 21:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 18]]);\n  };\n}; // Set loading to true\n\nexport var setLoading = function setLoading() {\n  return {\n    type: SET_LOADING\n  };\n};\nexport var getConfig = function getConfig(req) {\n  return function _callee3(dispatch) {\n    var configUrl, templatesUrl, _ref, _ref2, config, templates, agent;\n\n    return _regeneratorRuntime.async(function _callee3$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            configUrl = \"https://data.joornalo.com/config.json\";\n            templatesUrl = \"https://data.joornalo.com/templates/news/templates.json\";\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(_Promise.all([axios.get(configUrl), axios.get(templatesUrl), initAgent(req)]));\n\n          case 5:\n            _ref = _context4.sent;\n            _ref2 = _slicedToArray(_ref, 3);\n            config = _ref2[0];\n            templates = _ref2[1];\n            agent = _ref2[2];\n            dispatch({\n              type: GET_CONFIG,\n              payload: {\n                config: config.data,\n                templates: templates.data,\n                agent: agent\n              }\n            });\n            _context4.next = 15;\n            break;\n\n          case 13:\n            _context4.prev = 13;\n            _context4.t0 = _context4[\"catch\"](0);\n\n          case 15:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 13]]);\n  };\n};","map":{"version":3,"sources":["C:/Projects/DEVELOPMENT/joornalo-frontend/front.joornalo/store/actions/newsActions.js"],"names":["store","GET_NEWS","SET_LOADING","ADD_TEMPLATE","NEWS_ERROR","INIT_AGENT","GET_CONFIG","GET_OTHERNEWS","initAgent","test","axios","Parser","getTemplate","req","template","agent","setLoading","tmpl","templateUrl","get","res","data","console","log","dispatch","type","payload","statusText","getOtherNews","section","getState","moreUrl","topNews","moreNews","getNews","date","uuid","url","path","charAt","news","templates","templateName","getConfig","configUrl","templatesUrl","all","config"],"mappings":"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","sourcesContent":["import store from '../../pages/store';\r\nimport { GET_NEWS, SET_LOADING, ADD_TEMPLATE, NEWS_ERROR, INIT_AGENT, GET_CONFIG, GET_OTHERNEWS } from '../types';\r\nimport { initAgent, test } from '../../services/configService';\r\nimport axios from 'axios';\r\nimport Parser from 'html-react-parser';\r\n\r\n\r\nconst getTemplate = async (req, template, agent) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const tmpl = agent + '-' + template;\r\n    const templateUrl = `https://data.joornalo.com/templates/news/${tmpl}.json`;\r\n\r\n    const res = await axios.get(templateUrl);\r\n\r\n    return res.data;\r\n\r\n  } catch (err) {\r\n    console.log('***********Template Error');\r\n    dispatch({\r\n      type: NEWS_ERROR,\r\n      payload: err.statusText\r\n    });\r\n  }\r\n\r\n};\r\n\r\nexport const getOtherNews = (section) => async (dispatch, getState) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const moreUrl = `https://data.joornalo.com/news/${section}-more-news.json`;\r\n\r\n    const res = await axios.get(moreUrl);\r\n\r\n    dispatch({\r\n      type: GET_OTHERNEWS,\r\n      payload: {\r\n        topNews: res.data.topNews,\r\n        moreNews: res.data.moreNews,\r\n      }\r\n    });\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: NEWS_ERROR,\r\n      payload: 'NotFound'\r\n    });\r\n  }\r\n};\r\n\r\nexport const getNews = (section, date, uuid, url, req) => async (dispatch, getState) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const path = `https://data.joornalo.com/news/${uuid.charAt(0)}/${uuid.charAt(1)}/${uuid}.json`\r\n\r\n    const res = await axios.get(path);\r\n\r\n    if (url !== res.data['url']) {\r\n      dispatch({\r\n        type: NEWS_ERROR,\r\n        payload: `Redirect: ${res.data['url']}`\r\n      });\r\n    }\r\n\r\n    const agent = getState().news.agent;\r\n    const tmpl = agent + '-' + res.data['template'];\r\n\r\n    let template = getState().news.templates[tmpl];\r\n\r\n    if (!template) {\r\n      template = await getTemplate(req, res.data['template'], getState().news.agent);\r\n      dispatch({\r\n        type: ADD_TEMPLATE,\r\n        payload: {\r\n          template: { [tmpl]: template }\r\n        }\r\n      });\r\n    }\r\n\r\n    // let tmp = unescape(res.data.text);\r\n    // let find = tmp.split('<embed id=\"');\r\n\r\n    // for (let i = find.length - 1; i--;) {\r\n    //   let mediaNum = parseInt(find[i + 1].charAt(0));\r\n    //   if (res.data.media[mediaNum - 1]) {\r\n    //     find[i + 1] = '<div class=\"embed\">' + res.data.media[mediaNum - 1].embed + '</div>' + find[i + 1].substring(5);\r\n    //   } else {\r\n    //     find[i + 1] = find[i + 1].substring(5);\r\n    //   }\r\n    // }\r\n\r\n    // tmp = find.join('');\r\n    // find = tmp.split('<image id=\"');\r\n    // for (let i = find.length - 1; i--;) {\r\n    //   let imageNum = parseInt(find[i + 1].charAt(0));\r\n    //   if (res.data.images[imageNum - 1]) {\r\n    //     find[i + 1] = '<img src=\"https://data.joornalo.com/news/4/c/' + res.data.images[imageNum - 1].url + '\" />' + find[i + 1].substring(5);\r\n    //   } else {\r\n    //     find[i + 1] = find[i + 1].substring(5);\r\n    //   }\r\n    // }\r\n\r\n    // res.data.modText = Parser(find.join(''));\r\n\r\n\r\n    // res.data.mainImgUrl = 'https://data.joornalo.com/news/4/c/' + res.data.images[0].url;\r\n\r\n    //console.log(data);\r\n\r\n    dispatch({\r\n      type: GET_NEWS,\r\n      payload: {\r\n        news: res.data,\r\n        templateName: 'template-' + res.data['template'],\r\n        template: template\r\n      }\r\n    });\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: NEWS_ERROR,\r\n      payload: 'NotFound'\r\n    });\r\n  }\r\n};\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING\r\n  };\r\n};\r\n\r\n\r\nexport const getConfig = (req) => async dispatch => {\r\n  try {\r\n    const configUrl = `https://data.joornalo.com/config.json`\r\n    const templatesUrl = `https://data.joornalo.com/templates/news/templates.json`;\r\n\r\n    const [config, templates, agent] = await Promise.all([\r\n      axios.get(configUrl),\r\n      axios.get(templatesUrl),\r\n      initAgent(req)\r\n    ]);\r\n\r\n    dispatch({\r\n      type: GET_CONFIG,\r\n      payload: {\r\n        config: config.data,\r\n        templates: templates.data,\r\n        agent: agent\r\n      }\r\n    });\r\n\r\n  } catch (err) {\r\n    // dispatch({\r\n    //   type: NEWS_ERROR,\r\n    //   payload: 'NotFound'\r\n    // });\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}