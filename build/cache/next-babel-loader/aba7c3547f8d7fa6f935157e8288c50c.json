{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\DEVELOPMENT\\\\joornalo-frontend\\\\front.joornalo\\\\components\\\\news1.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useLayoutEffect } from 'react';\nimport Parser, { domToReact, htmlToDOM } from 'html-react-parser';\nimport Adv from './adv';\n\nconst news1 = ({\n  data\n}) => {\n  // componentDidMount(() => {\n  //   console.log('componentDidMount')\n  // });\n  // useEffect(() => {\n  //   // window.addEventListener('resize', updateImageWidths);\n  //   // updateImageWidths();\n  // }, []);\n  // let tmp = unescape(data.text);\n  // let find = tmp.split('<embed id=\"');\n  // for (let i = find.length - 1; i--;) {\n  //   let mediaNum = parseInt(find[i + 1].charAt(0));\n  //   if (data.media[mediaNum - 1]) {\n  //     find[i + 1] = '<div class=\"embed\">' + data.media[mediaNum - 1].embed + '</div>' + find[i + 1].substring(5);\n  //   } else {\n  //     find[i + 1] = find[i + 1].substring(5);\n  //   }\n  // }\n  // tmp = find.join('');\n  // find = tmp.split('<image id=\"');\n  // for (let i = find.length - 1; i--;) {\n  //   let imageNum = parseInt(find[i + 1].charAt(0));\n  //   if (data.images[imageNum - 1]) {\n  //     find[i + 1] = '<img src=\"https://data.joornalo.com/news/4/c/' + data.images[imageNum - 1].url + '\" />' + find[i + 1].substring(5);\n  //   } else {\n  //     find[i + 1] = find[i + 1].substring(5);\n  //   }\n  // }\n  // const modText = Parser(find.join(''));\n  // const mainImgUrl = 'https://data.joornalo.com/news/4/c/' + data.images[0].url;\n  //const modText2 = Parser(data.modText);\n  const updateImageWidths = () => {\n    console.log('updateImageWidths********');\n    const contentWidth = document.querySelector(\".newsContent div\").offsetWidth; //console.log(contentWidth);\n\n    let embed = document.querySelectorAll('.newsContent .embed iframe');\n\n    for (let x = 0; x < embed.length; x++) {\n      embed[x].width = contentWidth; //embed[x].height = contentWidth * .5625;\n    }\n\n    embed = document.querySelectorAll('.newsContent .embed .twitter-tweet');\n    console.log(embed);\n\n    for (let x = 0; x < embed.length; x++) {\n      embed[x].style[\"width\"] = \"100%\";\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"news\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, data.title), __jsx(\"img\", {\n    src: data.mainImgUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Details\"), __jsx(Adv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"newsContent col-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, modText2))));\n};\n\nexport default news1;","map":{"version":3,"sources":["C:/Projects/DEVELOPMENT/joornalo-frontend/front.joornalo/components/news1.js"],"names":["React","useEffect","useLayoutEffect","Parser","domToReact","htmlToDOM","Adv","news1","data","updateImageWidths","console","log","contentWidth","document","querySelector","offsetWidth","embed","querySelectorAll","x","length","width","style","title","mainImgUrl","modText2"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,eAA3B,QAAkD,OAAlD;AACA,OAAOC,MAAP,IAAiBC,UAAjB,EAA6BC,SAA7B,QAA8C,mBAA9C;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAE1B;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAGA,QAAMC,iBAAiB,GAAG,MAAM;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,UAAMC,YAAY,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,EAA2CC,WAAhE,CAF8B,CAG9B;;AACA,QAAIC,KAAK,GAAGH,QAAQ,CAACI,gBAAT,CAA0B,4BAA1B,CAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCF,MAAAA,KAAK,CAACE,CAAD,CAAL,CAASE,KAAT,GAAiBR,YAAjB,CADqC,CAErC;AACD;;AACDI,IAAAA,KAAK,GAAGH,QAAQ,CAACI,gBAAT,CAA0B,oCAA1B,CAAR;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCF,MAAAA,KAAK,CAACE,CAAD,CAAL,CAASG,KAAT,CAAe,OAAf,IAA0B,MAA1B;AACD;AAIF,GAjBD;;AAoBA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKb,IAAI,CAACc,KAAV,CADF,EAEE;AAAK,IAAA,GAAG,EAAEd,IAAI,CAACe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAIE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,EAOE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,QAAN,CADF,CAPF,CAHF,CADF;AAkBD,CAhFD;;AAkFA,eAAejB,KAAf","sourcesContent":["import React, { useEffect, useLayoutEffect } from 'react';\r\nimport Parser, { domToReact, htmlToDOM } from 'html-react-parser';\r\nimport Adv from './adv'\r\n\r\nconst news1 = ({ data }) => {\r\n\r\n  // componentDidMount(() => {\r\n  //   console.log('componentDidMount')\r\n  // });\r\n\r\n  // useEffect(() => {\r\n  //   // window.addEventListener('resize', updateImageWidths);\r\n  //   // updateImageWidths();\r\n\r\n  // }, []);\r\n\r\n  // let tmp = unescape(data.text);\r\n  // let find = tmp.split('<embed id=\"');\r\n\r\n  // for (let i = find.length - 1; i--;) {\r\n  //   let mediaNum = parseInt(find[i + 1].charAt(0));\r\n  //   if (data.media[mediaNum - 1]) {\r\n  //     find[i + 1] = '<div class=\"embed\">' + data.media[mediaNum - 1].embed + '</div>' + find[i + 1].substring(5);\r\n  //   } else {\r\n  //     find[i + 1] = find[i + 1].substring(5);\r\n  //   }\r\n  // }\r\n\r\n  // tmp = find.join('');\r\n  // find = tmp.split('<image id=\"');\r\n  // for (let i = find.length - 1; i--;) {\r\n  //   let imageNum = parseInt(find[i + 1].charAt(0));\r\n  //   if (data.images[imageNum - 1]) {\r\n  //     find[i + 1] = '<img src=\"https://data.joornalo.com/news/4/c/' + data.images[imageNum - 1].url + '\" />' + find[i + 1].substring(5);\r\n  //   } else {\r\n  //     find[i + 1] = find[i + 1].substring(5);\r\n  //   }\r\n  // }\r\n\r\n  // const modText = Parser(find.join(''));\r\n\r\n  // const mainImgUrl = 'https://data.joornalo.com/news/4/c/' + data.images[0].url;\r\n\r\n  //const modText2 = Parser(data.modText);\r\n\r\n\r\n  const updateImageWidths = () => {\r\n    console.log('updateImageWidths********')\r\n    const contentWidth = document.querySelector(\".newsContent div\").offsetWidth;\r\n    //console.log(contentWidth);\r\n    let embed = document.querySelectorAll('.newsContent .embed iframe')\r\n    for (let x = 0; x < embed.length; x++) {\r\n      embed[x].width = contentWidth;\r\n      //embed[x].height = contentWidth * .5625;\r\n    }\r\n    embed = document.querySelectorAll('.newsContent .embed .twitter-tweet')\r\n    console.log(embed)\r\n    for (let x = 0; x < embed.length; x++) {\r\n      embed[x].style[\"width\"] = \"100%\";\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"news\">\r\n      <h1>{data.title}</h1>\r\n      <img src={data.mainImgUrl} />\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <div className=\"details\">\r\n            Details\r\n          </div>\r\n          <Adv />\r\n        </div>\r\n        <div className=\"newsContent col-9\">\r\n          <div>{modText2}</div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default news1;\r\n"]},"metadata":{},"sourceType":"module"}