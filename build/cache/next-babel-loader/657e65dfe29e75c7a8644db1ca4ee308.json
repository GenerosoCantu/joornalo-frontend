{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\DEVELOPMENT\\\\joornalo-frontend\\\\front.joornalo\\\\components\\\\adv.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\n\nconst Adv = context => {\n  const {\n    0: msg,\n    1: setMsg\n  } = useState('---');\n  const {\n    0: id,\n    1: setId\n  } = useState(null);\n  const {\n    0: adsrc,\n    1: setAdsrc\n  } = useState(null); // const [contentWidth, setContentWidth] = useState(0)\n\n  let loaded = false;\n  let isIntersecting = false; // let banner = ''\n  // if (context.params) {\n  //   banner = context.params.size;\n  // }\n\n  /*\r\n  300x250 - Medium Rectangle - 40%\r\n  728x90 - Leaderboard - 25%\r\n  160x600 - Wide Skyscraper - 12%\r\n  300x600 - Half Page - 5%\r\n  970x250 - Billboard - 1%\r\n  120x600 - Skyscraper\r\n    320x50 - Mobile Leaderboard - 12%\r\n  320x320 - Mobile Full Page Flex - 1%\r\n  320x100 - Large Mobile\r\n  */\n\n  useEffect(() => {\n    if (!id) {\n      setId('adv' + Math.round(Math.random() * 100000));\n    }\n\n    const div = document.getElementById(id);\n\n    if (div) {\n      // setContentWidth(div.offsetWidth)\n      try {\n        let observer = new IntersectionObserver((entries, observerChild) => {\n          if (!loaded && entries[0].isIntersecting) {\n            loaded = true;\n            isIntersecting = true;\n            observerChild.unobserve(entries[0].target);\n            preLoad();\n          }\n        });\n        observer.observe(div);\n      } catch (err) {\n        safariIssue();\n      }\n    }\n  });\n\n  const safariIssue = () => {\n    if (!loaded) {\n      loaded = true;\n      isIntersecting = true;\n      preLoad();\n    }\n  };\n  /*\r\n  300x250 - Medium Rectangle - 40%\r\n  728x90 - Leaderboard - 25%\r\n  160x600 - Wide Skyscraper - 12%\r\n  300x600 - Half Page - 5%\r\n  120x600 - Skyscraper\r\n    970x250 - Billboard - 1%\r\n  */\n\n\n  const preLoad = () => {\n    if (isIntersecting) {\n      console.log('Ready to load...............................');\n      setMsg('Loaded');\n      let num = Math.floor(Math.random() * 4);\n      let bb = ['a', 'b', 'c', 'd'];\n      setAdsrc('https://data.joornalo.com/ads/' + context.params.size + bb[num] + '.jpg');\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"adv\",\n    id: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: adsrc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }));\n};\n\n{\n  /* Ad {banner} ({contentWidth}): {msg} */\n}\nexport default Adv;","map":{"version":3,"sources":["C:/Projects/DEVELOPMENT/joornalo-frontend/front.joornalo/components/adv.js"],"names":["React","useState","useEffect","Adv","context","msg","setMsg","id","setId","adsrc","setAdsrc","loaded","isIntersecting","Math","round","random","div","document","getElementById","observer","IntersectionObserver","entries","observerChild","unobserve","target","preLoad","observe","err","safariIssue","console","log","num","floor","bb","params","size"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,GAAG,GAAIC,OAAD,IAAa;AACvB,QAAM;AAAA,OAACC,GAAD;AAAA,OAAMC;AAAN,MAAgBL,QAAQ,CAAC,KAAD,CAA9B;AACA,QAAM;AAAA,OAACM,EAAD;AAAA,OAAKC;AAAL,MAAcP,QAAQ,CAAC,IAAD,CAA5B;AACA,QAAM;AAAA,OAACQ,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,IAAD,CAAlC,CAHuB,CAIvB;;AAEA,MAAIU,MAAM,GAAG,KAAb;AACA,MAAIC,cAAc,GAAG,KAArB,CAPuB,CAQvB;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;AAaAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACK,EAAL,EAAS;AACPC,MAAAA,KAAK,CAAC,QAAQK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,MAA3B,CAAT,CAAL;AACD;;AAED,UAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwBX,EAAxB,CAAZ;;AACA,QAAIS,GAAJ,EAAS;AACP;AAEA,UAAI;AACF,YAAIG,QAAQ,GAAG,IAAIC,oBAAJ,CAAyB,CAACC,OAAD,EAAUC,aAAV,KAA4B;AAClE,cAAI,CAACX,MAAD,IAAWU,OAAO,CAAC,CAAD,CAAP,CAAWT,cAA1B,EAA0C;AACxCD,YAAAA,MAAM,GAAG,IAAT;AACAC,YAAAA,cAAc,GAAG,IAAjB;AACAU,YAAAA,aAAa,CAACC,SAAd,CAAwBF,OAAO,CAAC,CAAD,CAAP,CAAWG,MAAnC;AACAC,YAAAA,OAAO;AACR;AACF,SAPc,CAAf;AAQAN,QAAAA,QAAQ,CAACO,OAAT,CAAiBV,GAAjB;AACD,OAVD,CAUE,OAAOW,GAAP,EAAY;AACZC,QAAAA,WAAW;AACZ;AACF;AACF,GAvBQ,CAAT;;AAyBA,QAAMA,WAAW,GAAG,MAAM;AACxB,QAAI,CAACjB,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAG,IAAT;AACAC,MAAAA,cAAc,GAAG,IAAjB;AACAa,MAAAA,OAAO;AACR;AACF,GAND;AAQA;;;;;;;;;;AAUA,QAAMA,OAAO,GAAG,MAAM;AACpB,QAAIb,cAAJ,EAAoB;AAClBiB,MAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACAxB,MAAAA,MAAM,CAAC,QAAD,CAAN;AACA,UAAIyB,GAAG,GAAGlB,IAAI,CAACmB,KAAL,CAAWnB,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAV;AACA,UAAIkB,EAAE,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAT;AACAvB,MAAAA,QAAQ,CAAC,mCAAmCN,OAAO,CAAC8B,MAAR,CAAeC,IAAlD,GAAyDF,EAAE,CAACF,GAAD,CAA3D,GAAmE,MAApE,CAAR;AACD;AACF,GARD;;AAUA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,EAAE,EAAExB,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEE,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CArFD;;AAsFA;AAAC;AAA2C;AAE5C,eAAeN,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Adv = (context) => {\r\n  const [msg, setMsg] = useState('---')\r\n  const [id, setId] = useState(null)\r\n  const [adsrc, setAdsrc] = useState(null)\r\n  // const [contentWidth, setContentWidth] = useState(0)\r\n\r\n  let loaded = false;\r\n  let isIntersecting = false;\r\n  // let banner = ''\r\n\r\n  // if (context.params) {\r\n  //   banner = context.params.size;\r\n  // }\r\n\r\n  /*\r\n  300x250 - Medium Rectangle - 40%\r\n  728x90 - Leaderboard - 25%\r\n  160x600 - Wide Skyscraper - 12%\r\n  300x600 - Half Page - 5%\r\n  970x250 - Billboard - 1%\r\n  120x600 - Skyscraper\r\n\r\n  320x50 - Mobile Leaderboard - 12%\r\n  320x320 - Mobile Full Page Flex - 1%\r\n  320x100 - Large Mobile\r\n  */\r\n\r\n  useEffect(() => {\r\n    if (!id) {\r\n      setId('adv' + Math.round(Math.random() * 100000))\r\n    }\r\n\r\n    const div = document.getElementById(id);\r\n    if (div) {\r\n      // setContentWidth(div.offsetWidth)\r\n\r\n      try {\r\n        let observer = new IntersectionObserver((entries, observerChild) => {\r\n          if (!loaded && entries[0].isIntersecting) {\r\n            loaded = true;\r\n            isIntersecting = true;\r\n            observerChild.unobserve(entries[0].target);\r\n            preLoad();\r\n          }\r\n        });\r\n        observer.observe(div);\r\n      } catch (err) {\r\n        safariIssue();\r\n      }\r\n    }\r\n  });\r\n\r\n  const safariIssue = () => {\r\n    if (!loaded) {\r\n      loaded = true;\r\n      isIntersecting = true;\r\n      preLoad();\r\n    }\r\n  }\r\n\r\n  /*\r\n 300x250 - Medium Rectangle - 40%\r\n 728x90 - Leaderboard - 25%\r\n 160x600 - Wide Skyscraper - 12%\r\n 300x600 - Half Page - 5%\r\n 120x600 - Skyscraper\r\n\r\n  970x250 - Billboard - 1%\r\n */\r\n\r\n  const preLoad = () => {\r\n    if (isIntersecting) {\r\n      console.log('Ready to load...............................')\r\n      setMsg('Loaded')\r\n      let num = Math.floor(Math.random() * 4)\r\n      let bb = ['a', 'b', 'c', 'd']\r\n      setAdsrc('https://data.joornalo.com/ads/' + context.params.size + bb[num] + '.jpg')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='adv' id={id}>\r\n      <img src={adsrc} />\r\n    </div>\r\n  )\r\n}\r\n{/* Ad {banner} ({contentWidth}): {msg} */ }\r\n\r\nexport default Adv;"]},"metadata":{},"sourceType":"module"}