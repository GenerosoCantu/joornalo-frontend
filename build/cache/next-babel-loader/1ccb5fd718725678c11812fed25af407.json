{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport redirect from 'next-redirect';\nimport Error from 'next/error';\nimport { connect } from 'react-redux';\nimport { getFront, getConfig } from '../store/actions/newsActions';\nimport Template from \"../components/Template.js\";\nimport Layout from '../components/MyLayout';\n\nvar Index = function Index(_ref) {\n  var agent = _ref.agent,\n      front = _ref.front,\n      templateName = _ref.templateName,\n      template = _ref.template;\n  return __jsx(Layout, {\n    agent: agent\n  }, __jsx(\"div\", {\n    className: templateName\n  }, __jsx(Template, {\n    grid: template,\n    data: front\n  })));\n};\n\nIndex.getInitialProps = function _callee(context, agent) {\n  var store;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          store = context.store;\n\n          if (true) {\n            _context.next = 4;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(store.dispatch(getConfig(context.req)));\n\n        case 4:\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(store.dispatch(getFront('home', context.req)));\n\n        case 6:\n          return _context.abrupt(\"return\", {\n            agent: agent\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    front: state.news.front,\n    templateName: state.news.frontTemplateName,\n    template: state.news.frontTemplate,\n    loading: state.news.loading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getFront: getFront\n})(Index);","map":null,"metadata":{},"sourceType":"module"}