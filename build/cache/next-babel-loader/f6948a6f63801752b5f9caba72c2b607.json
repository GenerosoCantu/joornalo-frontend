{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Projects\\\\DEVELOPMENT\\\\joornalo-frontend\\\\front.joornalo\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport { getConfig } from '../store/actions/newsActions';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Batman TV Shows\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.shows.map(function (show) {\n    return __jsx(\"li\", {\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, show.name)));\n  })), __jsx(Link, {\n    href: \"/section/[section]/[date]/[id]\",\n    as: \"/section/world-middleeast/2020-01-11/iraq-iran-us-troops-4c50e545-539e-4893-b505-1edc2de3c999\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Good link\")));\n};\n\nIndex.getInitialProps = function _callee(context) {\n  var store, res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          store = context.store;\n\n          if (true) {\n            _context.next = 4;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(store.dispatch(getConfig(context.req)));\n\n        case 4:\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(fetch('https://api.tvmaze.com/search/shows?q=batman'));\n\n        case 6:\n          res = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 9:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Projects/DEVELOPMENT/joornalo-frontend/front.joornalo/pages/index.js"],"names":["Layout","Link","fetch","getConfig","Index","props","shows","map","show","id","name","getInitialProps","context","store","dispatch","req","res","json","data","console","log","length","entry"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,SAASC,SAAT,QAA0B,8BAA1B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACnB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,IAAT,CADF,CADF,CADmB;AAAA,GAApB,CADH,CAFF,EAWE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,gCAAX;AAA4C,IAAA,EAAE,EAAC,+FAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAXF,CADiB;AAAA,CAAnB;;AAkBAN,KAAK,CAACO,eAAN,GAAwB,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,UAAAA,KADc,GACJD,OADI,CACdC,KADc;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAIdA,KAAK,CAACC,QAAN,CAAeX,SAAS,CAACS,OAAO,CAACG,GAAT,CAAxB,CAJc;;AAAA;AAAA;AAAA,2CAOJb,KAAK,CAAC,8CAAD,CAPD;;AAAA;AAOhBc,UAAAA,GAPgB;AAAA;AAAA,2CAQHA,GAAG,CAACC,IAAJ,EARG;;AAAA;AAQhBC,UAAAA,IARgB;AAUtBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AAVsB,2CAYf;AACLf,YAAAA,KAAK,EAAEY,IAAI,CAACX,GAAL,CAAS,UAAAe,KAAK;AAAA,qBAAIA,KAAK,CAACd,IAAV;AAAA,aAAd;AADF,WAZe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAiBA,eAAeJ,KAAf","sourcesContent":["import Layout from '../components/MyLayout';\r\nimport Link from 'next/link';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nimport { getConfig } from '../store/actions/newsActions';\r\n\r\nconst Index = props => (\r\n  <Layout>\r\n    <h1>Batman TV Shows</h1>\r\n    <ul>\r\n      {props.shows.map(show => (\r\n        <li key={show.id}>\r\n          <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\r\n            <a>{show.name}</a>\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n    <Link href=\"/section/[section]/[date]/[id]\" as=\"/section/world-middleeast/2020-01-11/iraq-iran-us-troops-4c50e545-539e-4893-b505-1edc2de3c999\">\r\n      <a>Good link</a>\r\n    </Link>\r\n  </Layout>\r\n);\r\n\r\nIndex.getInitialProps = async function (context) {\r\n  const { store } = context;\r\n\r\n  if (!process.browser) {\r\n    await store.dispatch(getConfig(context.req));\r\n  }\r\n\r\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\r\n  const data = await res.json();\r\n\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n\r\n  return {\r\n    shows: data.map(entry => entry.show)\r\n  };\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}