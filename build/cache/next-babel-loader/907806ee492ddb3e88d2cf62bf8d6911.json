{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport redirect from 'next-redirect';\nimport Error from 'next/error';\nimport { connect } from 'react-redux';\nimport { getNews, getOtherNews, getConfig } from '../../../../store/actions/newsActions';\nimport Template from \"../../../../components/Template.js\";\nimport Layout from '../../../../components/MyLayout'; // url ===> http://localhost:3000/section/world/2020-01-11/iraq-iran-us-troops-4c50e545-539e-4893-b505-1edc2de3c977\n\nconst News = ({\n  agent,\n  id,\n  uuid,\n  news,\n  templateName,\n  template,\n  notFound\n}) => {\n  const getTitle = news => {\n    return news ? news.title : '';\n  };\n\n  if (notFound) {\n    return __jsx(Error, {\n      statusCode: \"404\"\n    });\n  }\n\n  return __jsx(Layout, {\n    agent: agent\n  }, __jsx(\"div\", {\n    className: templateName\n  }, __jsx(Template, {\n    grid: template,\n    data: news\n  })), __jsx(\"ul\", null, __jsx(\"li\", null, __jsx(Link, {\n    href: \"/section/[section]/[date]/[id]\",\n    as: \"/section/world/2020-01-11/iraq-iran-us-troops-4c50e545-539e-4893-b505-1edc2de3c9ZZ\"\n  }, __jsx(\"a\", null, \"Bad link\"))), __jsx(\"li\", null, __jsx(Link, {\n    href: \"/section/[section]/[date]/[id]\",\n    as: \"/section/world-europe/2020-01-11/harry-meghan-drop-royal-duties-4c50e545-539e-4893-b505-1edc2de3c988\"\n  }, __jsx(\"a\", null, \"Link: Megan & Harry\"))), __jsx(\"li\", null, __jsx(Link, {\n    href: \"/section/[section]/[date]/[id]\",\n    as: \"/section/world-middleeast/2020-01-11/iraq-iran-us-troops-4c50e545-539e-4893-b505-1edc2de3c999\"\n  }, __jsx(\"a\", null, \"Link: Iran Nuclear Deal\")))));\n};\n\nNews.getInitialProps = async function (context, agent) {\n  const {\n    store\n  } = context;\n  const {\n    section,\n    date,\n    id\n  } = context.query;\n  const uuid = id.slice(-36);\n  const url = `/section/${section}/${date}/${id}`;\n  let notFound = false;\n  console.log(agent);\n\n  try {\n    if (!false) {\n      await store.dispatch(getConfig(context.req));\n    }\n\n    await store.dispatch(getNews(section, date, uuid, url, context.req));\n    await store.dispatch(getOtherNews(section));\n    const error = store.getState().news.error;\n\n    if (error && error.indexOf('Redirect: ') == 0) {\n      return redirect(context, error.slice(10), 308);\n    }\n\n    if (error == 'NotFound') {\n      notFound = true;\n    }\n  } catch (err) {\n    console.log(err);\n  }\n\n  return {\n    agent,\n    id,\n    uuid,\n    url,\n    notFound\n  };\n};\n\nconst mapStateToProps = state => ({\n  news: state.news.news,\n  topNews: state.news.topNews,\n  moreNews: state.news.moreNews,\n  templateName: state.news.newsTemplateName,\n  template: state.news.newsTemplate,\n  loading: state.news.loading\n});\n\nexport default connect(mapStateToProps, {\n  getNews,\n  getOtherNews\n})(News);","map":null,"metadata":{},"sourceType":"module"}