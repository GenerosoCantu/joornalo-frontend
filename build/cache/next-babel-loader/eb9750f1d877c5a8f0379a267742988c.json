{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { GET_NEWS, SET_LOADING, ADD_TEMPLATE, NEWS_ERROR, GET_CONFIG, GET_OTHERNEWS, GET_FRONT, FRONT_ERROR } from '../types';\nconst initialState = {\n  agent: null,\n  config: null,\n  news: null,\n  templates: null,\n  newsTemplate: null,\n  newsTemplateName: null,\n  front: null,\n  frontTemplate: null,\n  frontTemplateName: null,\n  loading: false,\n  agent: null,\n  error: null,\n  topNews: null,\n  moreNews: null\n};\nexport default ((state = initialState, action) => {\n  // console.log(action.type);\n  switch (action.type) {\n    case GET_NEWS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        news: action.payload.news,\n        newsTemplateName: action.payload.templateName,\n        newsTemplate: action.payload.template,\n        error: false,\n        loading: false\n      });\n\n    case NEWS_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    case SET_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case GET_CONFIG:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        config: action.payload.config,\n        templates: action.payload.templates,\n        agent: action.payload.agent\n      });\n\n    case ADD_TEMPLATE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        templates: Object.assign(state.templates, action.payload.template)\n      });\n\n    case GET_OTHERNEWS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        topNews: action.payload.topNews,\n        moreNews: action.payload.moreNews\n      });\n\n    case GET_FRONT:\n      //console.log(action.payload.front)\n      return _objectSpread(_objectSpread({}, state), {}, {\n        front: action.payload.front,\n        frontTemplateName: action.payload.templateName,\n        frontTemplate: action.payload.template,\n        topNews: action.payload.front.topNews,\n        error: false,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n});","map":null,"metadata":{},"sourceType":"module"}