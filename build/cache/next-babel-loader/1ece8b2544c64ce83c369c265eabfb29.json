{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar _jsxFileName = \"C:\\\\Projects\\\\DEVELOPMENT\\\\joornalo-frontend\\\\front.joornalo\\\\components\\\\news2.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useLayoutEffect } from 'react';\nimport Parser, { domToReact, htmlToDOM } from 'html-react-parser';\nimport Adv from './adv';\n\nvar news2 = function news2(_ref) {\n  var data = _ref.data;\n  var AdParams = {\n    size: '160x600'\n  }; // componentDidMount(() => {\n  //   console.log('componentDidMount')\n  // });\n\n  useEffect(function () {\n    window.addEventListener('resize', updateImageWidths);\n    updateImageWidths();\n  }, []);\n  var tmp = unescape(data.text);\n  var find;\n  find = tmp.split('<embed id=\"');\n\n  for (var i = find.length - 1; i--;) {\n    var mediaNum = _parseInt(find[i + 1].charAt(0));\n\n    if (data.media[mediaNum - 1]) {\n      find[i + 1] = '<div class=\"embed\">' + data.media[mediaNum - 1].embed + '</div>' + find[i + 1].substring(5);\n    } else {\n      find[i + 1] = find[i + 1].substring(5);\n    }\n  }\n\n  tmp = find.join('');\n  find = tmp.split('<image id=\"');\n\n  for (var _i = find.length - 1; _i--;) {\n    var imageNum = _parseInt(find[_i + 1].charAt(0));\n\n    if (data.images[imageNum - 1]) {\n      find[_i + 1] = '<img src=\"https://data.joornalo.com/news/4/c/' + data.images[imageNum - 1].url + '\" />' + find[_i + 1].substring(5);\n    } else {\n      find[_i + 1] = find[_i + 1].substring(5);\n    }\n  }\n\n  var modText = Parser(find.join(''));\n  var mainImgUrl = 'https://data.joornalo.com/news/4/c/' + data.images[0].url;\n\n  var updateImageWidths = function updateImageWidths() {\n    //console.log('updateImageWidths********')\n    var contentWidth = document.querySelector(\".newsContent div\").offsetWidth; //console.log(contentWidth);\n\n    var embed = document.querySelectorAll('.newsContent .embed iframe');\n\n    for (var x = 0; x < embed.length; x++) {\n      embed[x].width = contentWidth; //embed[x].height = contentWidth * .5625;\n    }\n\n    embed = document.querySelectorAll('.newsContent .embed .twitter-tweet'); //console.log(embed)\n\n    for (var _x = 0; _x < embed.length; _x++) {\n      embed[_x].style[\"width\"] = \"100%\";\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"news\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, data.title), __jsx(\"div\", {\n    className: \"row row-m-column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col-220 col-m-full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Details\"), __jsx(Adv, {\n    params: AdParams,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"newsContent col-full-220 col-m-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: mainImgUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    suppressHydrationWarning: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, modText))));\n};\n\nexport default news2;","map":{"version":3,"sources":["C:/Projects/DEVELOPMENT/joornalo-frontend/front.joornalo/components/news2.js"],"names":["React","useEffect","useLayoutEffect","Parser","domToReact","htmlToDOM","Adv","news2","data","AdParams","size","window","addEventListener","updateImageWidths","tmp","unescape","text","find","split","i","length","mediaNum","charAt","media","embed","substring","join","imageNum","images","url","modText","mainImgUrl","contentWidth","document","querySelector","offsetWidth","querySelectorAll","x","width","style","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect } from 'react';\r\nimport Parser, { domToReact, htmlToDOM } from 'html-react-parser';\r\nimport Adv from './adv'\r\n\r\nconst news2 = ({ data }) => {\r\n\r\n  const AdParams = {\r\n    size: '160x600'\r\n  }\r\n\r\n  // componentDidMount(() => {\r\n  //   console.log('componentDidMount')\r\n  // });\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', updateImageWidths);\r\n    updateImageWidths();\r\n  }, []);\r\n\r\n  let tmp = unescape(data.text);\r\n  let find;\r\n  find = tmp.split('<embed id=\"');\r\n\r\n  for (let i = find.length - 1; i--;) {\r\n    let mediaNum = parseInt(find[i + 1].charAt(0));\r\n    if (data.media[mediaNum - 1]) {\r\n      find[i + 1] = '<div class=\"embed\">' + data.media[mediaNum - 1].embed + '</div>' + find[i + 1].substring(5);\r\n    } else {\r\n      find[i + 1] = find[i + 1].substring(5);\r\n    }\r\n  }\r\n\r\n  tmp = find.join('');\r\n  find = tmp.split('<image id=\"');\r\n  for (let i = find.length - 1; i--;) {\r\n    let imageNum = parseInt(find[i + 1].charAt(0));\r\n    if (data.images[imageNum - 1]) {\r\n      find[i + 1] = '<img src=\"https://data.joornalo.com/news/4/c/' + data.images[imageNum - 1].url + '\" />' + find[i + 1].substring(5);\r\n    } else {\r\n      find[i + 1] = find[i + 1].substring(5);\r\n    }\r\n  }\r\n\r\n  let modText = Parser(find.join(''));\r\n\r\n  const mainImgUrl = 'https://data.joornalo.com/news/4/c/' + data.images[0].url;\r\n\r\n  const updateImageWidths = () => {\r\n    //console.log('updateImageWidths********')\r\n    const contentWidth = document.querySelector(\".newsContent div\").offsetWidth;\r\n    //console.log(contentWidth);\r\n    let embed = document.querySelectorAll('.newsContent .embed iframe')\r\n    for (let x = 0; x < embed.length; x++) {\r\n      embed[x].width = contentWidth;\r\n      //embed[x].height = contentWidth * .5625;\r\n    }\r\n    embed = document.querySelectorAll('.newsContent .embed .twitter-tweet')\r\n    //console.log(embed)\r\n    for (let x = 0; x < embed.length; x++) {\r\n      embed[x].style[\"width\"] = \"100%\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"news\">\r\n      <h1>{data.title}</h1>\r\n      <div className=\"row row-m-column\">\r\n        <div className=\"col-220 col-m-full\">\r\n          <div className=\"details\">\r\n            Details\r\n          </div>\r\n          <Adv params={AdParams} />\r\n        </div>\r\n        <div className=\"newsContent col-full-220 col-m-auto\">\r\n          <img src={mainImgUrl} />\r\n          <div suppressHydrationWarning={true}>{modText}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default news2;\r\n"]},"metadata":{},"sourceType":"module"}