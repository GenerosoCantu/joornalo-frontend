{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\DEVELOPMENT\\\\joornalo-frontend\\\\front.joornalo\\\\components\\\\Template.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Components from \"./components.js\";\n\nconst Template = ({\n  grid,\n  data\n}) => {\n  console.log('--------------------------------------grid');\n  console.log(grid);\n  if (!grid || !data) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  });\n  return grid.rows.map((row, index) => {\n    return __jsx(\"div\", {\n      className: \"row\",\n      key: `row-${index}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, row.column.map((col, index) => {\n      if (col.component) {\n        return __jsx(\"div\", {\n          className: `col-${col.width}`,\n          key: `col-${index}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, __jsx(Components, {\n          component: col.component,\n          data: data,\n          text: col.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }));\n      } else {\n        if (col.rows) {\n          return __jsx(\"div\", {\n            className: `col-${col.width}`,\n            key: `col-${index}`,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          }, __jsx(Template, {\n            grid: col,\n            data: data,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21\n            },\n            __self: this\n          }));\n        }\n      }\n    }));\n  });\n};\n\nexport default Template;","map":{"version":3,"sources":["C:/Projects/DEVELOPMENT/joornalo-frontend/front.joornalo/components/Template.js"],"names":["Components","Template","grid","data","console","log","rows","map","row","index","column","col","component","width","text"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,iBAAvB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,MAAI,CAACA,IAAD,IAAS,CAACC,IAAd,EAAoB,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AACpB,SAAOD,IAAI,CAACI,IAAL,CAAUC,GAAV,CAAc,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACnC,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,GAAG,EAAG,OAAMA,KAAM,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,GAAG,CAACE,MAAJ,CAAWH,GAAX,CAAe,CAACI,GAAD,EAAMF,KAAN,KAAgB;AAC9B,UAAIE,GAAG,CAACC,SAAR,EAAmB;AACjB,eACE;AAAK,UAAA,SAAS,EAAG,OAAMD,GAAG,CAACE,KAAM,EAAjC;AAAoC,UAAA,GAAG,EAAG,OAAMJ,KAAM,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,UAAD;AAAY,UAAA,SAAS,EAAEE,GAAG,CAACC,SAA3B;AAAsC,UAAA,IAAI,EAAET,IAA5C;AAAkD,UAAA,IAAI,EAAEQ,GAAG,CAACG,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAKD,OAND,MAMO;AACL,YAAIH,GAAG,CAACL,IAAR,EAAc;AACZ,iBACE;AAAK,YAAA,SAAS,EAAG,OAAMK,GAAG,CAACE,KAAM,EAAjC;AAAoC,YAAA,GAAG,EAAG,OAAMJ,KAAM,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,MAAC,QAAD;AAAU,YAAA,IAAI,EAAEE,GAAhB;AAAqB,YAAA,IAAI,EAAER,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF;AAKD;AACF;AACF,KAhBA,CADH,CADF;AAqBD,GAtBM,CAAP;AAuBD,CA3BD;;AA6BA,eAAeF,QAAf","sourcesContent":["import Components from \"./components.js\";\r\n\r\nconst Template = ({ grid, data }) => {\r\n  console.log('--------------------------------------grid');\r\n  console.log(grid);\r\n  if (!grid || !data) return (<div></div>);\r\n  return grid.rows.map((row, index) => {\r\n    return (\r\n      <div className=\"row\" key={`row-${index}`}>\r\n        {row.column.map((col, index) => {\r\n          if (col.component) {\r\n            return (\r\n              <div className={`col-${col.width}`} key={`col-${index}`}>\r\n                <Components component={col.component} data={data} text={col.text} />\r\n              </div>\r\n            );\r\n          } else {\r\n            if (col.rows) {\r\n              return (\r\n                <div className={`col-${col.width}`} key={`col-${index}`}>\r\n                  <Template grid={col} data={data} />\r\n                </div>\r\n              );\r\n            }\r\n          }\r\n        })}\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nexport default Template;"]},"metadata":{},"sourceType":"module"}