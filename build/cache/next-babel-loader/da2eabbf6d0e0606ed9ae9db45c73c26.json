{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport store from '../../pages/store';\nimport { GET_NEWS, SET_LOADING, ADD_TEMPLATE, NEWS_ERROR, INIT_AGENT, GET_CONFIG, GET_OTHERNEWS } from '../types';\nimport { initAgent, test } from '../../services/configService';\nimport axios from 'axios';\n\nconst getTemplate = async (req, template, agent) => {\n  try {\n    setLoading();\n    const tmpl = agent + '-' + template;\n    const templateUrl = `https://data.joornalo.com/templates/news/${tmpl}.json`;\n    const res = await axios.get(templateUrl);\n    let tmp = unescape(data.text);\n    let find = tmp.split('<embed id=\"');\n\n    for (let i = find.length - 1; i--;) {\n      let mediaNum = _parseInt(find[i + 1].charAt(0));\n\n      if (data.media[mediaNum - 1]) {\n        find[i + 1] = '<div class=\"embed\">' + data.media[mediaNum - 1].embed + '</div>' + find[i + 1].substring(5);\n      } else {\n        find[i + 1] = find[i + 1].substring(5);\n      }\n    }\n\n    tmp = find.join('');\n    find = tmp.split('<image id=\"');\n\n    for (let i = find.length - 1; i--;) {\n      let imageNum = _parseInt(find[i + 1].charAt(0));\n\n      if (data.images[imageNum - 1]) {\n        find[i + 1] = '<img src=\"https://data.joornalo.com/news/4/c/' + data.images[imageNum - 1].url + '\" />' + find[i + 1].substring(5);\n      } else {\n        find[i + 1] = find[i + 1].substring(5);\n      }\n    }\n\n    data.modText = Parser(find.join(''));\n    data.mainImgUrl = 'https://data.joornalo.com/news/4/c/' + data.images[0].url;\n    return res.data;\n  } catch (err) {\n    console.log('***********Template Error');\n    dispatch({\n      type: NEWS_ERROR,\n      payload: err.statusText\n    });\n  }\n};\n\nexport const getOtherNews = section => async (dispatch, getState) => {\n  try {\n    setLoading();\n    const moreUrl = `https://data.joornalo.com/news/${section}-more-news.json`;\n    const res = await axios.get(moreUrl);\n    dispatch({\n      type: GET_OTHERNEWS,\n      payload: {\n        topNews: res.data.topNews,\n        moreNews: res.data.moreNews\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: NEWS_ERROR,\n      payload: 'NotFound'\n    });\n  }\n};\nexport const getNews = (section, date, uuid, url, req) => async (dispatch, getState) => {\n  try {\n    setLoading();\n    const path = `https://data.joornalo.com/news/${uuid.charAt(0)}/${uuid.charAt(1)}/${uuid}.json`;\n    const res = await axios.get(path);\n\n    if (url !== res.data['url']) {\n      dispatch({\n        type: NEWS_ERROR,\n        payload: `Redirect: ${res.data['url']}`\n      });\n    }\n\n    const agent = getState().news.agent;\n    const tmpl = agent + '-' + res.data['template'];\n    let template = getState().news.templates[tmpl];\n\n    if (!template) {\n      template = await getTemplate(req, res.data['template'], getState().news.agent);\n      dispatch({\n        type: ADD_TEMPLATE,\n        payload: {\n          template: {\n            [tmpl]: template\n          }\n        }\n      });\n    }\n\n    dispatch({\n      type: GET_NEWS,\n      payload: {\n        news: res.data,\n        template: template\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: NEWS_ERROR,\n      payload: 'NotFound'\n    });\n  }\n}; // Set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};\nexport const getConfig = req => async dispatch => {\n  try {\n    const configUrl = `https://data.joornalo.com/config.json`;\n    const templatesUrl = `https://data.joornalo.com/templates/news/templates.json`;\n    const [config, templates, agent] = await _Promise.all([axios.get(configUrl), axios.get(templatesUrl), initAgent(req)]);\n    dispatch({\n      type: GET_CONFIG,\n      payload: {\n        config: config.data,\n        templates: templates.data,\n        agent: agent\n      }\n    });\n  } catch (err) {// dispatch({\n    //   type: NEWS_ERROR,\n    //   payload: 'NotFound'\n    // });\n  }\n};","map":{"version":3,"sources":["C:/Projects/DEVELOPMENT/joornalo-frontend/front.joornalo/store/actions/newsActions.js"],"names":["store","GET_NEWS","SET_LOADING","ADD_TEMPLATE","NEWS_ERROR","INIT_AGENT","GET_CONFIG","GET_OTHERNEWS","initAgent","test","axios","getTemplate","req","template","agent","setLoading","tmpl","templateUrl","res","get","tmp","unescape","data","text","find","split","i","length","mediaNum","charAt","media","embed","substring","join","imageNum","images","url","modText","Parser","mainImgUrl","err","console","log","dispatch","type","payload","statusText","getOtherNews","section","getState","moreUrl","topNews","moreNews","getNews","date","uuid","path","news","templates","getConfig","configUrl","templatesUrl","config","all"],"mappings":"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","sourcesContent":["import store from '../../pages/store';\r\nimport { GET_NEWS, SET_LOADING, ADD_TEMPLATE, NEWS_ERROR, INIT_AGENT, GET_CONFIG, GET_OTHERNEWS } from '../types';\r\nimport { initAgent, test } from '../../services/configService';\r\nimport axios from 'axios';\r\n\r\n\r\nconst getTemplate = async (req, template, agent) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const tmpl = agent + '-' + template;\r\n    const templateUrl = `https://data.joornalo.com/templates/news/${tmpl}.json`;\r\n\r\n    const res = await axios.get(templateUrl);\r\n\r\n\r\n    let tmp = unescape(data.text);\r\n    let find = tmp.split('<embed id=\"');\r\n\r\n    for (let i = find.length - 1; i--;) {\r\n      let mediaNum = parseInt(find[i + 1].charAt(0));\r\n      if (data.media[mediaNum - 1]) {\r\n        find[i + 1] = '<div class=\"embed\">' + data.media[mediaNum - 1].embed + '</div>' + find[i + 1].substring(5);\r\n      } else {\r\n        find[i + 1] = find[i + 1].substring(5);\r\n      }\r\n    }\r\n\r\n    tmp = find.join('');\r\n    find = tmp.split('<image id=\"');\r\n    for (let i = find.length - 1; i--;) {\r\n      let imageNum = parseInt(find[i + 1].charAt(0));\r\n      if (data.images[imageNum - 1]) {\r\n        find[i + 1] = '<img src=\"https://data.joornalo.com/news/4/c/' + data.images[imageNum - 1].url + '\" />' + find[i + 1].substring(5);\r\n      } else {\r\n        find[i + 1] = find[i + 1].substring(5);\r\n      }\r\n    }\r\n\r\n    data.modText = Parser(find.join(''));\r\n\r\n    data.mainImgUrl = 'https://data.joornalo.com/news/4/c/' + data.images[0].url;\r\n\r\n\r\n    return res.data;\r\n\r\n  } catch (err) {\r\n    console.log('***********Template Error');\r\n    dispatch({\r\n      type: NEWS_ERROR,\r\n      payload: err.statusText\r\n    });\r\n  }\r\n\r\n};\r\n\r\nexport const getOtherNews = (section) => async (dispatch, getState) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const moreUrl = `https://data.joornalo.com/news/${section}-more-news.json`;\r\n\r\n    const res = await axios.get(moreUrl);\r\n\r\n    dispatch({\r\n      type: GET_OTHERNEWS,\r\n      payload: {\r\n        topNews: res.data.topNews,\r\n        moreNews: res.data.moreNews,\r\n      }\r\n    });\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: NEWS_ERROR,\r\n      payload: 'NotFound'\r\n    });\r\n  }\r\n};\r\n\r\nexport const getNews = (section, date, uuid, url, req) => async (dispatch, getState) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const path = `https://data.joornalo.com/news/${uuid.charAt(0)}/${uuid.charAt(1)}/${uuid}.json`\r\n\r\n    const res = await axios.get(path);\r\n\r\n    if (url !== res.data['url']) {\r\n      dispatch({\r\n        type: NEWS_ERROR,\r\n        payload: `Redirect: ${res.data['url']}`\r\n      });\r\n    }\r\n\r\n    const agent = getState().news.agent;\r\n    const tmpl = agent + '-' + res.data['template'];\r\n\r\n    let template = getState().news.templates[tmpl];\r\n\r\n    if (!template) {\r\n      template = await getTemplate(req, res.data['template'], getState().news.agent);\r\n      dispatch({\r\n        type: ADD_TEMPLATE,\r\n        payload: {\r\n          template: { [tmpl]: template }\r\n        }\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: GET_NEWS,\r\n      payload: {\r\n        news: res.data,\r\n        template: template\r\n      }\r\n    });\r\n\r\n  } catch (err) {\r\n    dispatch({\r\n      type: NEWS_ERROR,\r\n      payload: 'NotFound'\r\n    });\r\n  }\r\n};\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING\r\n  };\r\n};\r\n\r\n\r\nexport const getConfig = (req) => async dispatch => {\r\n  try {\r\n    const configUrl = `https://data.joornalo.com/config.json`\r\n    const templatesUrl = `https://data.joornalo.com/templates/news/templates.json`;\r\n\r\n    const [config, templates, agent] = await Promise.all([\r\n      axios.get(configUrl),\r\n      axios.get(templatesUrl),\r\n      initAgent(req)\r\n    ]);\r\n\r\n    dispatch({\r\n      type: GET_CONFIG,\r\n      payload: {\r\n        config: config.data,\r\n        templates: templates.data,\r\n        agent: agent\r\n      }\r\n    });\r\n\r\n  } catch (err) {\r\n    // dispatch({\r\n    //   type: NEWS_ERROR,\r\n    //   payload: 'NotFound'\r\n    // });\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}