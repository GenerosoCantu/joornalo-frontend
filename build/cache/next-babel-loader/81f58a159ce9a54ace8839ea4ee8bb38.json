{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\DEVELOPMENT\\\\joornalo-frontend\\\\front.joornalo\\\\components\\\\adv.js\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect } from \"react\";\n\nconst Adv = context => {\n  const loaded = false;\n  const isIntersecting = false;\n  const id = 'adv' + Math.round(Math.random() * 100000);\n  useEffect(() => {\n    const div = document.getElementById(id);\n\n    if (div) {\n      const contentWidth = div.offsetWidth;\n      console.log(id, '::::', contentWidth);\n\n      try {\n        let observer = new IntersectionObserver(handler());\n        observer.observe(div);\n      } catch (err) {\n        safariIssue();\n      }\n    }\n  });\n\n  const handler = (entries, observer) => {\n    if (!loaded && entries[0].isIntersecting) {\n      loaded = true;\n      isIntersecting = true;\n      preLoad();\n    }\n  };\n\n  const safariIssue = () => {\n    if (!loaded) {\n      loaded = true;\n      isIntersecting = true;\n      preLoad();\n    }\n  };\n\n  const preLoad = () => {\n    if (isIntersecting) {\n      console.log('Ready to load...............................');\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"adv\",\n    id: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Advertising\");\n};\n\nexport default Adv;","map":{"version":3,"sources":["C:/Projects/DEVELOPMENT/joornalo-frontend/front.joornalo/components/adv.js"],"names":["React","useRef","useEffect","Adv","context","loaded","isIntersecting","id","Math","round","random","div","document","getElementById","contentWidth","offsetWidth","console","log","observer","IntersectionObserver","handler","observe","err","safariIssue","entries","preLoad"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;;AAEA,MAAMC,GAAG,GAAIC,OAAD,IAAa;AAEvB,QAAMC,MAAM,GAAG,KAAf;AACA,QAAMC,cAAc,GAAG,KAAvB;AACA,QAAMC,EAAE,GAAG,QAAQC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,MAA3B,CAAnB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwBN,EAAxB,CAAZ;;AACA,QAAII,GAAJ,EAAS;AACP,YAAMG,YAAY,GAAGH,GAAG,CAACI,WAAzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYV,EAAZ,EAAgB,MAAhB,EAAwBO,YAAxB;;AAEA,UAAI;AACF,YAAII,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBC,OAAO,EAAhC,CAAf;AACAF,QAAAA,QAAQ,CAACG,OAAT,CAAiBV,GAAjB;AACD,OAHD,CAGE,OAAOW,GAAP,EAAY;AACZC,QAAAA,WAAW;AACZ;AACF;AACF,GAbQ,CAAT;;AAeA,QAAMH,OAAO,GAAG,CAACI,OAAD,EAAUN,QAAV,KAAuB;AACrC,QAAI,CAACb,MAAD,IAAWmB,OAAO,CAAC,CAAD,CAAP,CAAWlB,cAA1B,EAA0C;AACxCD,MAAAA,MAAM,GAAG,IAAT;AACAC,MAAAA,cAAc,GAAG,IAAjB;AACAmB,MAAAA,OAAO;AACR;AACF,GAND;;AAQA,QAAMF,WAAW,GAAG,MAAM;AACxB,QAAI,CAAClB,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAG,IAAT;AACAC,MAAAA,cAAc,GAAG,IAAjB;AACAmB,MAAAA,OAAO;AACR;AACF,GAND;;AAQA,QAAMA,OAAO,GAAG,MAAM;AACpB,QAAInB,cAAJ,EAAoB;AAClBU,MAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACD;AACF,GAJD;;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,EAAE,EAAEV,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF;AAKD,CAhDD;;AAkDA,eAAeJ,GAAf","sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\n\r\nconst Adv = (context) => {\r\n\r\n  const loaded = false;\r\n  const isIntersecting = false;\r\n  const id = 'adv' + Math.round(Math.random() * 100000);\r\n\r\n  useEffect(() => {\r\n    const div = document.getElementById(id);\r\n    if (div) {\r\n      const contentWidth = div.offsetWidth\r\n      console.log(id, '::::', contentWidth)\r\n\r\n      try {\r\n        let observer = new IntersectionObserver(handler());\r\n        observer.observe(div);\r\n      } catch (err) {\r\n        safariIssue();\r\n      }\r\n    }\r\n  });\r\n\r\n  const handler = (entries, observer) => {\r\n    if (!loaded && entries[0].isIntersecting) {\r\n      loaded = true;\r\n      isIntersecting = true;\r\n      preLoad();\r\n    }\r\n  }\r\n\r\n  const safariIssue = () => {\r\n    if (!loaded) {\r\n      loaded = true;\r\n      isIntersecting = true;\r\n      preLoad();\r\n    }\r\n  }\r\n\r\n  const preLoad = () => {\r\n    if (isIntersecting) {\r\n      console.log('Ready to load...............................')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='adv' id={id}>\r\n      Advertising\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Adv;"]},"metadata":{},"sourceType":"module"}