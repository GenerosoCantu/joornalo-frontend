{"version":3,"file":"3.js","sources":["webpack:///./components/block-adv.js","webpack:///./components/block-header1.js","webpack:///./components/block-menu1.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Adv = (context) => {\r\n  const [msg, setMsg] = useState('---')\r\n  const [id, setId] = useState(null)\r\n  const [first, setFirst] = useState(null)\r\n  const [adsrc, setAdsrc] = useState(null)\r\n  // const [contentWidth, setContentWidth] = useState(0)\r\n\r\n  let loaded = false;\r\n  let isIntersecting = false;\r\n  // let banner = ''\r\n\r\n  // if (context.params) {\r\n  //   banner = context.params.size;\r\n  // }\r\n\r\n  /*\r\n  300x250 - Medium Rectangle - 40%\r\n  728x90 - Leaderboard - 25%\r\n  160x600 - Wide Skyscraper - 12%\r\n  300x600 - Half Page - 5%\r\n  970x250 - Billboard - 1%\r\n  120x600 - Skyscraper\r\n\r\n  320x50 - Mobile Leaderboard - 12%\r\n  320x320 - Mobile Full Page Flex - 1%\r\n  320x100 - Large Mobile\r\n  */\r\n\r\n  useEffect(() => {\r\n    if (!id) {\r\n      setId('adv' + Math.round(Math.random() * 100000))\r\n    }\r\n    if (!first && id) {\r\n      setFirst(true)\r\n      const div = document.getElementById(id);\r\n      if (div) {\r\n        // setContentWidth(div.offsetWidth)\r\n\r\n        try {\r\n          let observer = new IntersectionObserver((entries, observerChild) => {\r\n            if (!loaded && entries[0].isIntersecting) {\r\n              loaded = true;\r\n              isIntersecting = true;\r\n              observerChild.unobserve(entries[0].target);\r\n              preLoad();\r\n            }\r\n          });\r\n          observer.observe(div);\r\n        } catch (err) {\r\n          safariIssue();\r\n        }\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  const safariIssue = () => {\r\n    if (!loaded) {\r\n      loaded = true;\r\n      isIntersecting = true;\r\n      preLoad();\r\n    }\r\n  }\r\n\r\n  /*\r\n 300x250 - Medium Rectangle - 40%\r\n 728x90 - Leaderboard - 25%\r\n 160x600 - Wide Skyscraper - 12%\r\n 300x600 - Half Page - 5%\r\n 120x600 - Skyscraper\r\n\r\n  970x250 - Billboard - 1%\r\n */\r\n\r\n  const preLoad = () => {\r\n    //console.log('Ready to load...............................', id)\r\n    if (isIntersecting) {\r\n\r\n      setMsg('Loaded')\r\n      let num = Math.floor(Math.random() * 4)\r\n      let bb = ['a', 'b', 'c', 'd']\r\n      setAdsrc('https://data.joornalo.com/ads/' + context.params.size + bb[num] + '.jpg')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='adv eureka' id={id}>\r\n      <img src={adsrc} />\r\n    </div>\r\n  )\r\n}\r\n{/* Ad {banner} ({contentWidth}): {msg} */ }\r\n\r\nexport default Adv;","import { connect } from 'react-redux';\r\nimport Link from 'next/link'\r\nimport Menu from './block-menu1'\r\nimport Adv from './block-adv'\r\n\r\nconst headerStyle = {\r\n  background: '#f01818'\r\n}\r\n\r\nconst linkStyle = {\r\n  marginRight: 15\r\n}\r\n\r\nconst AdParams = {\r\n  size: '728x90'\r\n}\r\n\r\nconst date = () => {\r\n\r\n  let days = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday'\r\n  ],\r\n    months = [\r\n      'January',\r\n      'February',\r\n      'March',\r\n      'April',\r\n      'May',\r\n      'June',\r\n      'July',\r\n      'August',\r\n      'September',\r\n      'October',\r\n      'November',\r\n      'December'\r\n    ],\r\n    date = new Date();\r\n\r\n  const displayDate =\r\n    days[date.getDay()] +\r\n    ', ' +\r\n    months[date.getMonth()] +\r\n    ' ' +\r\n    date.getDate() +\r\n    ', ' +\r\n    date.getFullYear();\r\n\r\n  return displayDate;\r\n}\r\n\r\nconst Header1 = ({ menu }) => {\r\n  return (\r\n    // <div style={headerStyle}>\r\n    //   <Link href=\"/\">\r\n    //     <a style={linkStyle}>Home</a>\r\n    //   </Link>\r\n    //   <Link href=\"/about\">\r\n    //     <a style={linkStyle}>About</a>\r\n    //   </Link>\r\n    // </div>\r\n\r\n    <>\r\n      <div className=\"header\">\r\n        <div className=\"container-fluid desktop\">\r\n          <div className=\"row\">\r\n            <div className=\"col-250\">\r\n              <div className=\"logo\">\r\n                <Link href=\"/\"><a>Joornalo</a></Link>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-auto headerBanner\">\r\n              <Adv params={AdParams} />\r\n            </div>\r\n\r\n            <div className=\"col-250\">\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <div className=\"search-box\">\r\n                    {/* <input id=\"search\" value=\"\" placeholder=\"Buscar\" type=\"text\" onKeydown=\"_keydown\" /> */}\r\n                    <input id=\"search\" placeholder=\"Search\" type=\"text\" />\r\n                    {/* <div on-tap=\"_submit\" class=\"search-icon\"></div> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <div className=\"date\">{date()}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"stripe\">\r\n        <div className=\"container-fluid\">\r\n          <Menu items={menu} />\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  menu: state.news.config['menu-header'],\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(Header1);\r\n","import Link from 'next/link';\r\n\r\nconst Menu = ({ items }) => {\r\n\r\n  return (\r\n\r\n    <>\r\n      <div className=\"row menu\">\r\n        <div className=\"col\">\r\n\r\n          <ul>\r\n            {items.map((item, index) => (\r\n\r\n              <li key={index}>\r\n                <Link href=\"{item.link}\"><a>{item.text}</a></Link>\r\n\r\n                <div hidden={!item.sub} className=\"bg\"></div>\r\n\r\n                <ol hidden={!item.sub}>\r\n\r\n                  {item.sub.map((sub, index0) => (\r\n                    <li key={index0}>\r\n                      <Link href=\"{sub.link}\"><a>{sub.text}</a></Link>\r\n                    </li>\r\n                  ))}\r\n\r\n                </ol>\r\n\r\n              </li>\r\n\r\n            ))}\r\n          </ul>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default Menu;"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;AAUA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;AC/FA;AACA;AACA;AACA;AAEA;AACA;AADA;AAIA;AACA;AADA;AAIA;AACA;AADA;AACA;AAGA;AAEA;AAAA;AAAA;AAyBA;AASA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AA/CA;AAsDA;AACA;AACA;AACA;AADA;AACA;AAGA;;;;;;;;;;;;;;;;;;;ACrHA;AACA;AACA;AAAA;AAAA;AAEA;AAGA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AACA;AAAA;AAgBA;AACA;AAEA;;;;A","sourceRoot":""}